!function(){"use strict";var e,t={1548:function(e,t,l){var a=window.wp.element,n=window.wp.blocks,o=window.wp.blockEditor,r=window.wp.data,c=window.wp.i18n,s=window.wp.components,i=l(2819),m=(0,r.withSelect)(((e,t)=>{const{attributes:l}=t,{filterItemsTaxonomySelected:a}=l,{getPostTypes:n,getTaxonomies:o,getEntityRecords:r}=e("core"),c=o({per_page:-1}),s=r("taxonomy",a,{per_page:-1});return{postTypes:n({per_page:-1}),taxonomies:c,taxTerms:s}}))((function(e){const{taxonomies:t,postTypes:l,attributes:n,setAttributes:r,taxTerms:m}=e,{postTypeSelected:d,latFieldSelected:p,lngFieldSelected:u,mapAddFilter:k,taxonomySelected:g,clusterMarkers:f,addressFieldType:b,addressFieldSelected:h,filterItemsByTaxonomy:v,filterItemsTaxonomySelected:y,filterItemsTaxonomyTermsSelected:E,mapTitle:_}=n;let T=[];if(l&&d){const e=l.find((e=>{let{slug:t}=e;return t===d}));e.metafields&&(T=e.metafields&&e.metafields.map((e=>({value:e.meta_key,label:e.meta_key}))))}if(!d){const e={value:null,label:"Select a Post Type"};T.unshift(e)}(0,a.useEffect)((()=>{const e=i.find(t,{slug:y});r(e?{filterItemsTaxonomySelectedRest:e.rest_base}:{filterItemsTaxonomySelectedRest:y})}),[y,t]);const S=(0,a.createElement)(a.Fragment,null,(0,a.createElement)(s.SelectControl,{label:(0,c.__)("Post Type","carkeek-blocks"),onChange:e=>r({postTypeSelected:e}),options:l&&l.map((e=>({value:e.slug,label:e.name}))),value:d}),d&&(0,a.createElement)(a.Fragment,null,(0,a.createElement)(s.RadioControl,{label:"Address Field Type",help:"Select the type of address field.",selected:b,options:[{label:"ACF Address",value:"acf"},{label:"LatLng",value:"latlng"}],onChange:e=>r({addressFieldType:e})}),"acf"===b&&(0,a.createElement)(s.SelectControl,{label:(0,c.__)("Address Field","carkeek-blocks"),onChange:e=>r({addressFieldSelected:e}),options:T,value:h}),"latlng"===b&&(0,a.createElement)(a.Fragment,null,(0,a.createElement)(s.SelectControl,{label:(0,c.__)("Lat Field","carkeek-blocks"),onChange:e=>r({latFieldSelected:e}),options:T,value:p}),(0,a.createElement)(s.SelectControl,{label:(0,c.__)("Lng Field","carkeek-blocks"),onChange:e=>r({lngFieldSelected:e}),options:T,value:u})))),C=(0,a.createElement)(a.Fragment,null,(0,a.createElement)(s.ToggleControl,{label:(0,c.__)("Filter Items by Taxonomy"),checked:v,onChange:e=>r({filterItemsByTaxonomy:e})}),v&&(0,a.createElement)(a.Fragment,null,t&&t.length>0?(0,a.createElement)(a.Fragment,null,(0,a.createElement)(s.SelectControl,{label:(0,c.__)("Select Taxonomy","carkeek-blocks"),onChange:e=>r({filterItemsTaxonomySelected:e}),options:t&&t.map((e=>({value:e.slug,label:e.name}))),value:y})):(0,a.createElement)("div",{className:"ck-error"},(0,c.__)("There are no taxonomies assigned this post type.","carkeek-blocks")),y&&(0,a.createElement)(a.Fragment,null,m&&m.length>0?(0,a.createElement)(s.SelectControl,{multiple:!0,label:(0,c.__)("Select Terms","carkeek-blocks"),onChange:e=>r({filterItemsTaxonomyTermsSelected:e}),options:m&&m.map((e=>({value:e.id,label:e.name}))),value:E,help:(0,c.__)("To select multiple [shift]-click","carkeek-blocks")}):(0,a.createElement)("div",{className:"ck-error"},(0,c.__)("There are no terms assigned to this taxonomy.","carkeek-blocks"))))),x=(0,a.createElement)(o.InspectorControls,null,(0,a.createElement)(s.PanelBody,{title:(0,c.__)("Posts Settings","carkeek-blocks")},S,C),(0,a.createElement)(s.PanelBody,{title:(0,c.__)("Map Settings","carkeek-blocks")},(0,a.createElement)(s.ToggleControl,{label:"Add Taxonomy Filter to Map",checked:k,onChange:e=>r({mapAddFilter:e})}),k&&(0,a.createElement)(s.SelectControl,{label:(0,c.__)("Select Taxonomy","carkeek-blocks"),onChange:e=>r({taxonomySelected:e}),options:t&&t.map((e=>({value:e.rest_base,label:e.name}))),value:g}),(0,a.createElement)(s.ToggleControl,{label:"Cluster Markers",checked:f,onChange:e=>r({clusterMarkers:e})}))),w=(0,o.useBlockProps)(),F=(0,c.__)("Select a Post Type from the Block Settings");return(0,a.createElement)("div",w,x,!d&&(0,a.createElement)(s.Placeholder,{label:(0,c.__)("Mapped Posts")},Array.isArray(l)?F:(0,a.createElement)(s.Spinner,null)),d&&(0,a.createElement)("div",{className:"archive-map-wrapper"},(0,a.createElement)("div",{className:"archive-map-top"},(0,a.createElement)("div",{className:"archive-map-intro"},(0,a.createElement)(o.InnerBlocks,{template:[["core/heading",{placeholder:"Section Title"}],["core/paragraph",{placeholder:"Section Summary"}]]})),(0,a.createElement)("div",{className:"archive-filter-list"},"[FILTER PLACEHOLDER]")),(0,a.createElement)("div",{className:"archive-map"},"[MAP PLACEHOLDER]")))})),d=JSON.parse('{"u2":"carkeek-blocks/mapped-posts-block"}');(0,n.registerBlockType)(d.u2,{edit:m,save:function(){return(0,a.createElement)(o.InnerBlocks.Content,null)}})},2819:function(e){e.exports=window.lodash}},l={};function a(e){var n=l[e];if(void 0!==n)return n.exports;var o=l[e]={exports:{}};return t[e](o,o.exports,a),o.exports}a.m=t,e=[],a.O=function(t,l,n,o){if(!l){var r=1/0;for(m=0;m<e.length;m++){l=e[m][0],n=e[m][1],o=e[m][2];for(var c=!0,s=0;s<l.length;s++)(!1&o||r>=o)&&Object.keys(a.O).every((function(e){return a.O[e](l[s])}))?l.splice(s--,1):(c=!1,o<r&&(r=o));if(c){e.splice(m--,1);var i=n();void 0!==i&&(t=i)}}return t}o=o||0;for(var m=e.length;m>0&&e[m-1][2]>o;m--)e[m]=e[m-1];e[m]=[l,n,o]},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={763:0,616:0};a.O.j=function(t){return 0===e[t]};var t=function(t,l){var n,o,r=l[0],c=l[1],s=l[2],i=0;if(r.some((function(t){return 0!==e[t]}))){for(n in c)a.o(c,n)&&(a.m[n]=c[n]);if(s)var m=s(a)}for(t&&t(l);i<r.length;i++)o=r[i],a.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return a.O(m)},l=self.webpackChunkmapped_posts_block=self.webpackChunkmapped_posts_block||[];l.forEach(t.bind(null,0)),l.push=t.bind(null,l.push.bind(l))}();var n=a.O(void 0,[616],(function(){return a(1548)}));n=a.O(n)}();