{"version":3,"file":"editor.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/classnames/index.js","webpack:///./src/blocks/accordion/edit.js","webpack:///./src/blocks/accordion/icons.js","webpack:///./src/blocks/accordion/index.js","webpack:///./src/blocks/accordion/parent.js","webpack:///./src/blocks/accordion/style.editor.scss?e533","webpack:///./src/blocks/custom-archive/edit.js","webpack:///./src/blocks/custom-archive/index.js","webpack:///./src/blocks/custom-archive/styles.editor.scss?884e","webpack:///./src/blocks/form-assembly/edit.js","webpack:///./src/blocks/form-assembly/icons.js","webpack:///./src/blocks/form-assembly/index.js","webpack:///./src/blocks/form-assembly/styles.editor.scss?1051","webpack:///./src/blocks/link-gallery/index.js","webpack:///./src/blocks/link-gallery/style.editor.scss?55af","webpack:///./src/blocks/link-tile/edit.js","webpack:///./src/blocks/link-tile/index.js","webpack:///./src/blocks/link-tile/parent.js","webpack:///./src/blocks/link-tile/style.editor.scss?1eef","webpack:///./src/blocks/page-title/index.js","webpack:///./src/blocks/rollover-images/edit.js","webpack:///./src/blocks/rollover-images/icons.js","webpack:///./src/blocks/rollover-images/index.js","webpack:///./src/blocks/rollover-images/parent.js","webpack:///./src/blocks/rollover-images/style.editor.scss?f5c2","webpack:///./src/blocks/slider-gallery/gallery-img.js","webpack:///./src/blocks/slider-gallery/gallery.js","webpack:///./src/blocks/slider-gallery/icons.js","webpack:///./src/blocks/slider-gallery/img-slider-edit.js","webpack:///./src/blocks/slider-gallery/img-slider-save.js","webpack:///./src/blocks/slider-gallery/img-slider.js","webpack:///./src/blocks/slider-gallery/index.js","webpack:///./src/blocks/slider-gallery/shared.js","webpack:///./src/blocks/slider-gallery/style.editor.scss?7de3","webpack:///./src/blocks/team-member/edit.js","webpack:///./src/blocks/team-member/index.js","webpack:///./src/blocks/team-member/parent.js","webpack:///./src/blocks/team-member/style.editor.scss?5f9d","webpack:///./src/editor.js","webpack:///external [\"wp\",\"blob\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"compose\"]","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"editor\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"i18n\"]","webpack:///external [\"wp\",\"icons\"]","webpack:///external [\"wp\",\"keycodes\"]","webpack:///external \"lodash\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/editor.js\");\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { Component } from \"@wordpress/element\";\nimport { withSelect } from \"@wordpress/data\";\nimport { __ } from \"@wordpress/i18n\";\nimport { RichText, InnerBlocks } from \"@wordpress/block-editor\";\nimport { TextControl } from \"@wordpress/components\";\n\n\n\nclass CollapseSectionEdit extends Component {\n    onChangeTitle = title => {\n        this.props.setAttributes({ title });\n    };\n    componentDidMount() {\n        this.props.setAttributes({ inheritedHeaderStyle : this.props.headerStyle });\n    }\n    render() {\n        const { headerStyle, attributes, isSelected, setAttributes } = this.props;\n        const { title } = attributes;\n        const showControls = (isSelected || !title) ? true : false;\n        return(\n            <>\n            <RichText\n                tagName={ headerStyle }\n                value={ title }\n                className={'wp-block-carkeek-blocks-expand-section__header'}\n                onChange={ ( title ) => setAttributes( { title } ) }\n                placeholder={ __('Section Heading...')}\n                formattingControls={ [ ] }\n            />\n\n            <InnerBlocks\n                className={'wp-block-carkeek-blocks-expand-section__inner-blocks'}\n            />\n\n            </>\n        )\n    }\n}\nexport default withSelect((select, props) => {\n    const parentId = select( 'core/block-editor' ).getBlockHierarchyRootClientId( props.clientId );\n    const parentAttributes = select('core/block-editor').getBlockAttributes( parentId );\n    return {\n        headerStyle: parentAttributes.headerStyle\n    };\n})(CollapseSectionEdit);","const icons =  {};\n\nicons.accordion = <svg width='20px' height='20px' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'>\n    <path d=\"M87 9H13a4 4 0 00-4 4v18a4 4 0 004 4h74a4 4 0 004-4V13a4 4 0 00-4-4zm2 22a2 2 0 01-2 2H13a2 2 0 01-2-2V13a2 2 0 012-2h74a2 2 0 012 2zm-37-9a1 1 0 01-1 1H18a1 1 0 010-2h33a1 1 0 011 1zm30.33-4.07a1 1 0 01.14 1.41l-5 6.12a1 1 0 01-.77.37 1 1 0 01-.78-.37l-5-6.12a1 1 0 011.55-1.27l4.23 5.18 4.22-5.18a1 1 0 011.41-.14zM87 37H13a4 4 0 00-4 4v18a4 4 0 004 4h74a4 4 0 004-4V41a4 4 0 00-4-4zm2 22a2 2 0 01-2 2H13a2 2 0 01-2-2V41a2 2 0 012-2h74a2 2 0 012 2zm-37-9a1 1 0 01-1 1H18a1 1 0 010-2h33a1 1 0 011 1zm30.33-4.07a1 1 0 01.14 1.41l-5 6.12a1 1 0 01-.77.37 1 1 0 01-.78-.37l-5-6.12a1 1 0 011.55-1.27l4.23 5.18 4.22-5.18a1 1 0 011.41-.14zM87 65H13a4 4 0 00-4 4v18a4 4 0 004 4h74a4 4 0 004-4V69a4 4 0 00-4-4zm2 22a2 2 0 01-2 2H13a2 2 0 01-2-2V69a2 2 0 012-2h74a2 2 0 012 2zm-37-9a1 1 0 01-1 1H18a1 1 0 010-2h33a1 1 0 011 1zm30.33-4.07a1 1 0 01.14 1.41l-5 6.12a1 1 0 01-.77.37 1 1 0 01-.78-.37l-5-6.12a1 1 0 011.55-1.27l4.23 5.18 4.22-5.18a1 1 0 011.41-.14z\"></path>\n</svg>;\n\nicons.dropdown = <svg width='20px' height='20px' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'>\n    <path d=\"M87 37H13a4 4 0 00-4 4v18a4 4 0 004 4h74a4 4 0 004-4V41a4 4 0 00-4-4zm2 22a2 2 0 01-2 2H13a2 2 0 01-2-2V41a2 2 0 012-2h74a2 2 0 012 2zm-37-9a1 1 0 01-1 1H18a1 1 0 010-2h33a1 1 0 011 1zm30.33-4.07a1 1 0 01.14 1.41l-5 6.12a1 1 0 01-.77.37 1 1 0 01-.78-.37l-5-6.12a1 1 0 011.55-1.27l4.23 5.18 4.22-5.18a1 1 0 011.41-.14z\"></path>\n</svg>;\n\nexport default icons;","import \"./style.editor.scss\";\nimport \"./parent\";\nimport icons from './icons';\nimport edit from \"./edit\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks } from \"@wordpress/block-editor\";\n\nconst attributes = {\n    title: {\n        type: \"string\"\n    },\n    inheritedHeaderStyle: {\n        type: \"string\"\n    }\n}\n\nregisterBlockType(\"carkeek-blocks/expand-collapse-section\", {\n    title: __(\"Expand Collapse Section\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Build an Accordion with inner blocks\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: {\n        src: icons.dropdown,\n    },\n\n    category: \"widgets\",\n\n    attributes,\n\n    parent: [\"carkeek-blocks/expand-collapse\"],\n\n    keywords: [\n        __(\"accordion\", \"carkeek-blocks\"),\n        __(\"expand\", \"carkeek-blocks\"),\n        __(\"collapse\", \"carkeek-blocks\")\n    ],\n\n    edit,\n\n    save({ attributes } ) {\n        const{ title } = attributes;\n        return (\n            <div>\n                <div className={`wp-block-carkeek-blocks-expand-section__header inner-block-headline`}>{title}</div>\n                <div className=\"wp-block-carkeek-blocks-expand-section__content\" aria-expanded=\"false\">\n                    <InnerBlocks.Content />\n                </div>\n            </div>\n        );\n    }\n});","import \"./style.editor.scss\";\nimport icons from './icons';\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody, RadioControl, CheckboxControl } from \"@wordpress/components\";\n\nconst attributes = {\n    headerStyle: {\n        type: 'string',\n        default: 'h3'\n    },\n    accordionStyle: {\n        type: 'boolean',\n        default: false\n    },\n    rangeSliderStyle: {\n        type: 'boolean',\n        default: false\n    }\n}\n\nregisterBlockType(\"carkeek-blocks/expand-collapse\", {\n    title: __(\"Expand/Colllapse\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Make an accordion of inner blocks\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: {\n        src: icons.accordion,\n    },\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n    attributes,\n\n    keywords: [\n        __(\"accordion\", \"carkeek-blocks\"),\n        __(\"expand\", \"carkeek-blocks\"),\n        __(\"collapse\", \"carkeek-blocks\")\n    ],\n\n    edit({ attributes, className, setAttributes }) {\n        const { headerStyle, accordionStyle, rangeSliderStyle } = attributes;\n\n        return (\n            <div className={`${className}`}>\n                <InspectorControls>\n                    <PanelBody>\n                        <CheckboxControl\n                            className=\"carkeek-accordion-style-label\"\n                            label=\"Use Accordion Style\"\n                            checked={ accordionStyle }\n                            onChange={value =>\n                                setAttributes({ accordionStyle: value })\n                            }\n                            help={\n                                accordionStyle\n                                    ? __(\n                                        \"Only one section will be expanded at a time\",\n                                        \"carkeek-blocks\"\n                                    )\n                                    : __(\n                                        \"Multiple sections can be open at a time\",\n                                        \"carkeek-blocks\"\n                                    )\n                            }\n                        />\n                        <CheckboxControl\n                            className=\"carkeek-accordion-range-style-label\"\n                            label=\"Display as a Range Slider\"\n                            checked={ rangeSliderStyle }\n                            onChange={value =>\n                                setAttributes({ rangeSliderStyle: value })\n                            }\n                            help={\n                                accordionStyle\n                                    ? __(\n                                        \"Each section will display as a point on a range scale\",\n                                        \"carkeek-blocks\"\n                                    )\n                                    : __(\n                                        \"\",\n                                        \"carkeek-blocks\"\n                                    )\n                            }\n                        />\n                        <RadioControl\n                            label=\"Section Header Style\"\n                            selected = {headerStyle}\n                            options = { [\n                                { label: 'h2', value: 'h2' },\n                                { label: 'h3', value: 'h3' },\n                                { label: 'h4', value: 'h4' },\n                                { label: 'h5', value: 'h5' },\n                                { label: 'h6', value: 'h6' },\n                            ]}\n                            onChange={value =>\n                                setAttributes({ headerStyle: value })\n                            }\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks\n                    allowedBlocks={[\"carkeek-blocks/expand-collapse-section\"]}\n\n                />\n            </div>\n        );\n    },\n\n    save({ attributes } ) {\n        const{ accordionStyle, headerStyle, rangeSliderStyle} = attributes;\n        const rangeStyle = rangeSliderStyle ? ' is-range-style' : '';\n        const blockStyle = 'innerblock-headline-style-' + headerStyle + rangeStyle;\n        return (\n            <div data-accordion={accordionStyle} className={ blockStyle }>\n                {rangeSliderStyle && (\n                    <div className={'range-slider-element'}></div>\n                )}\n                <InnerBlocks.Content />\n\n            </div>\n        );\n    }\n});","// extracted by mini-css-extract-plugin","import classnames from \"classnames\";\nimport { get, invoke } from \"lodash\";\n\nimport { Component, RawHTML } from \"@wordpress/element\";\nimport { withSelect } from \"@wordpress/data\";\nimport { __ } from \"@wordpress/i18n\";\nimport {\n    RangeControl,\n    PanelBody,\n    ToggleControl,\n    RadioControl,\n    Spinner,\n    Placeholder,\n    SelectControl,\n    TextareaControl\n} from \"@wordpress/components\";\nimport { InspectorControls, RichText } from \"@wordpress/block-editor\";\n\nclass CustomArchiveEdit extends Component {\n    onChangeNumberOfPosts = numberOfPosts => {\n        this.props.setAttributes({ numberOfPosts });\n    };\n\n    onChangePostType = postTypeSelected => {\n        this.props.setAttributes({ postTypeSelected });\n    };\n\n    onChangeTaxonomy = taxonomySelected => {\n        this.props.setAttributes({ taxonomySelected });\n    };\n\n    onChangeTaxFilter = value => {\n        this.props.setAttributes({ filterByTaxonomy: value });\n        if (Array.isArray(this.props.taxonomies) && this.props.taxonomies.length == 1) {\n            this.props.setAttributes({ taxonomySelected : this.props.taxonomies[0].slug});\n        }\n    }\n\n\n    onSelectTerms = terms => {\n        this.props.setAttributes({ taxTermsSelected : terms.join(\",\") });\n    };\n\n    render() {\n\n        const {\n            posts,\n            taxonomies,\n            taxTerms,\n            postTypes,\n            className,\n            attributes,\n            setAttributes,\n            isSelected,\n        } = this.props;\n        const {\n            numberOfPosts,\n            displayPostExcerpt,\n            excerptLength,\n            postLayout,\n            postsToShow,\n            postTypeSelected,\n            filterByTaxonomy,\n            taxTermsSelected,\n            taxonomySelected,\n            hideIfEmpty,\n            emptyMessage,\n            headline,\n            headlineLevel,\n            sortBy,\n            order\n        } = attributes;\n        const headlineStyle = 'h' + headlineLevel;\n        const icons = {\n            pin: (\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"black\"\n                    width=\"18px\"\n                    height=\"18px\"\n                >\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n                    <path d=\"M22 13h-8v-2h8v2zm0-6h-8v2h8V7zm-8 10h8v-2h-8v2zm-2-8v6c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V9c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2zm-1.5 6l-2.25-3-1.75 2.26-1.25-1.51L3.5 15h7z\" />\n                </svg>\n            ),\n        };\n        const postTypeSelect = (\n            <SelectControl\n                label={__(\"Post Type\", \"carkeek-blocks\")}\n                onChange={this.onChangePostType}\n                options={\n                    postTypes &&\n                    postTypes.map(type => ({\n                        value: type.slug,\n                        label: type.name\n                    }))\n                }\n                value={postTypeSelected}\n            />\n        );\n\n        const taxonomySelect = (\n            <>\n                <ToggleControl\n                    label={__(\"Filter by Taxonomy\")}\n                    checked={filterByTaxonomy}\n                    onChange={this.onChangeTaxFilter}\n                />\n                {filterByTaxonomy && (\n                    <>\n                        <SelectControl\n                            label={__(\"Select Taxonomy\", \"carkeek-blocks\")}\n                            onChange={this.onChangeTaxonomy}\n                            options={\n                                taxonomies &&\n                                taxonomies.map(type => ({\n                                    value: type.slug,\n                                    label: type.name\n                                }))\n                            }\n                            value={taxonomySelected}\n                        />\n                        {taxonomySelected && (\n                            <SelectControl\n                                multiple\n                                label={__(\"Select Terms\", \"carkeek-blocks\")}\n                                onChange={this.onSelectTerms}\n                                options={\n                                    taxTerms &&\n                                    taxTerms.map(type => ({\n                                        value: type.id,\n                                        label: type.name\n                                    }))\n                                }\n                                value={taxTermsSelected && taxTermsSelected.split(',')}\n                            />\n                        )}\n                    </>\n                )}\n            </>\n        );\n        const inspectorControls = (\n            <InspectorControls>\n                <PanelBody title={__(\"Posts Settings\", \"carkeek-blocks\")}>\n                    {postTypeSelect}\n                    {postTypeSelected && (\n                       <> {taxonomySelect} </>\n                    )}\n                    <RangeControl\n                        label={__(\"Number of Posts\", \"carkeek-blocks\")}\n                        value={numberOfPosts}\n                        help={__(\"Select -1 to show all\")}\n                        onChange={this.onChangeNumberOfPosts}\n                        min={-1}\n                        max={21}\n                    />\n                    <SelectControl\n                            label={__(\"Sort By\", \"carkeek-blocks\")}\n                            onChange={value =>\n                                setAttributes({\n                                    sortBy: value\n                                })\n                            }\n                            options={[\n                                { label: __(\"Publish Date\"), value: \"date\"},\n                                { label: __(\"Title (alpha)\"), value: \"title\"},\n                                { label: __(\"Menu Order\"), value: \"menu_order\"}\n                            ]}\n                            value={sortBy}\n                        />\n                    <RadioControl\n                    label={__(\"Order\")}\n                    selected={order}\n                    options={[\n                        { label: __(\"ASC\"), value: \"ASC\"},\n                        { label: __(\"DESC\"), value: \"DESC\"},\n                    ]}\n                    onChange={value =>\n                        setAttributes({\n                            order: value\n                        })\n                    }\n                />\n\n                </PanelBody>\n                <PanelBody title={__(\"Layout\", \"carkeek-blocks\")}>\n                <RadioControl\n                    label={__(\"Layout Style\")}\n                    selected={postLayout}\n                    options={[\n                        { label: __(\"Grid\"), value: \"grid\" },\n                        { label: __(\"List\"), value: \"list\"},\n                        { label: __(\"Link Tile\"), value: \"link-tile\"}\n                    ]}\n                    onChange={value =>\n                        setAttributes({\n                            postLayout: value\n                        })\n                    }\n                />\n                <RangeControl\n                        label={__(\"Heading Size\", \"carkeek-blocks\")}\n                        value={headlineLevel}\n                        onChange={value =>\n                            setAttributes({ headlineLevel: value })\n                        }\n                        min={2}\n                        max={6}\n                    />\n\n                    <ToggleControl\n                        label={__(\"Include Exerpt\")}\n                        checked={displayPostExcerpt}\n                        onChange={value =>\n                            setAttributes({ displayPostExcerpt: value })\n                        }\n                    />\n\n\n                    {displayPostExcerpt && (\n                            <RangeControl\n                                label={__(\"Max number of words in excerpt\")}\n                                value={excerptLength}\n                                onChange={value =>\n                                    setAttributes({ excerptLength: value })\n                                }\n                                min={10}\n                                max={75}\n                            />\n                        )}\n\n                    <ToggleControl\n                        label={__(\"Hide Block if Empty\")}\n                        checked={hideIfEmpty}\n                        onChange={value =>\n                            setAttributes({ hideIfEmpty: value })\n                        }\n                    />\n                    { !hideIfEmpty&& (\n                        <TextareaControl\n                            label={__(\"Text to Display if Empty\")}\n                            value={emptyMessage}\n                            onChange={value =>\n                                setAttributes({ emptyMessage: value })\n                            }\n                        />\n                    )}\n\n                </PanelBody>\n            </InspectorControls>\n        );\n\n        const hasPosts = Array.isArray(posts) && posts.length;\n\n        if (!hasPosts) {\n            const message = hideIfEmpty ? __(\"No Posts Found: Block will not display\") : emptyMessage;\n            const noPostMessage =\n                typeof postTypeSelected !== \"undefined\"\n                    ? message\n                    : __(\"Select a Post Type from the Block Settings\");\n            const showHeadline = isSelected || (headline && ! hideIfEmpty) ? true : false;\n            return (\n                <>\n                    {inspectorControls}\n                    { showHeadline && (\n                    <RichText\n                        tagName={ headlineStyle }\n                        value={ headline }\n                        onChange={ ( headline ) => setAttributes( { headline } ) }\n                        placeholder={ __('Heading...')}\n                        formattingControls={ [ ] }\n                    />\n                   ) }\n\n                    <Placeholder icon={icons.pin} label={ headline ? headline : __(\"Latest Posts\")}>\n                        {!Array.isArray(posts) ? <Spinner /> : noPostMessage}\n                    </Placeholder>\n                </>\n            );\n        }\n\n        //removing posts should be instant\n        const displayPosts =\n            posts.length > postsToShow ? posts.slice(0, postsToShow) : posts;\n\n\n        return (\n            <>\n                {inspectorControls}\n                <div\n                    className={classnames(className, {\n                        \"wp-block-carkeek-blocks-custom-archive\": true,\n                        \"is-grid\": postLayout === \"grid\",\n                        \"is-list\": postLayout === \"list\",\n                        \"is-link-tile\": postLayout === \"link-tile\"\n                    })}\n                >\n                   { (isSelected || headline) && (\n                    <RichText\n                        tagName={ headlineStyle }\n                        value={ headline }\n                        onChange={ ( headline ) => setAttributes( { headline } ) }\n                        placeholder={ __('Heading...')}\n                        formattingControls={ [ ] }\n                    />\n                   ) }\n                    <div className=\"wp-block-carkeek-blocks-custom-archive__list\">\n                        {displayPosts.map(post => {\n                            const titleTrimmed = invoke(post, [\n                                \"title\",\n                                \"rendered\",\n                                \"trim\"\n                            ]);\n                            let excerpt = post.excerpt ? post.excerpt.rendered : '';\n\n                            const excerptElement = document.createElement(\n                                \"div\"\n                            );\n                            excerptElement.innerHTML = excerpt;\n\n                            excerpt =\n                                excerptElement.textContent ||\n                                excerptElement.innerText ||\n                                \"\";\n                            const imageSourceUrl = post.featuredImageSourceUrl;\n\n                            const imageClasses = classnames({\n                                \"wp-block-carkeek-blocks-custom-archive__featured-image\": true\n                            });\n\n                            const postExcerpt = (\n                                <>\n                                    {excerpt\n                                        .trim()\n                                        .split(\" \", excerptLength)\n                                        .join(\" \")}\n                                    {/* translators: excerpt truncation character, default …  */}\n                                </>\n                            );\n\n                            return (\n                                <div key={post.id}>\n\n                                        <div className={imageClasses}>\n                                            {imageSourceUrl && (\n                                                <img\n                                                    src={imageSourceUrl}\n                                                    alt=\"\"\n                                                />\n                                            )}\n                                        </div>\n                                        <div className=\"wp-block-carkeek-blocks-custom-archive__content\">\n                                        <div className=\"wp-block-carkeek-blocks-custom-archive__title\">\n                                            {titleTrimmed ? (\n                                                <RawHTML>\n                                                    {titleTrimmed}\n                                                </RawHTML>\n                                            ) : (\n                                                __(\"(no title)\")\n                                            )}\n                                       </div>\n\n                                    {displayPostExcerpt &&(\n                                        <div className=\"wp-block-carkeek-blocks-custom-archive__post-excerpt\">\n                                            {postExcerpt}\n                                        </div>\n                                    )}\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <p style={{textAlign: 'center', fontSize: '10px'}}>(Showing Recent {postTypeSelected}: Posts rendered here may differ than the actual query.)</p>\n\n                </div>\n            </>\n        );\n    }\n}\n\nexport default withSelect((select, props) => {\n\n    const { attributes } = props;\n    const { numberOfPosts, postTypeSelected, taxonomySelected, taxTermsSelected, filterByTaxonomy, order, sortBy } = attributes;\n    const { getEntityRecords, getMedia, getPostTypes, getTaxonomies } = select(\"core\");\n    const taxTerms = getEntityRecords('taxonomy', taxonomySelected, { per_page: -1 } );\n    let query = { per_page: numberOfPosts, order: order.toLowerCase() , orderby: sortBy };\n    if (filterByTaxonomy && taxonomySelected && taxTermsSelected) {\n        query[taxonomySelected] = taxTermsSelected;\n    }\n    const latestPosts = getEntityRecords(\"postType\", postTypeSelected, query);\n    let taxonomies = getTaxonomies();\n    taxonomies = !Array.isArray(taxonomies)\n            ? taxonomies\n            : taxonomies.filter(tax => tax.types.includes(postTypeSelected));\n\n\n    return {\n        postTypes: getPostTypes(),\n        taxonomies: taxonomies,\n        taxSelected:  Array.isArray(taxonomies) && taxonomies.length == 1 ? taxonomies[0] : taxonomySelected,\n        taxTerms: taxTerms,\n        posts: !Array.isArray(latestPosts)\n            ? latestPosts\n            : latestPosts.map(post => {\n                  if (post.featured_media) {\n                      const image = getMedia(post.featured_media);\n                      let url = get(\n                          image,\n                          [\"media_details\", \"sizes\", \"large\", \"sourc_url\"],\n                          null\n                      );\n                      if (!url) {\n                          url = get(image, \"source_url\", null);\n                      }\n                      return { ...post, featuredImageSourceUrl: url };\n                  }\n                  return post;\n              })\n    };\n})(CustomArchiveEdit);\n","import \"./styles.editor.scss\";\nimport edit from \"./edit\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\n\nconst attributes = {\n    numberOfPosts: {\n        type: \"number\",\n        default: 3\n    },\n    postTypeSelected: {\n        type: \"string\"\n    },\n    displayPostExcerpt: {\n        type: \"boolean\",\n        default: true,\n    },\n    postLayout: {\n        type: \"string\",\n        default: \"grid\"\n    },\n    sortBy: {\n        type: \"string\",\n        default: \"date\"\n    },\n    order: {\n        type: \"string\",\n        default: \"ASC\"\n    },\n    excerptLength: {\n        type: \"number\",\n        default: 25\n    },\n    filterByTaxonomy: {\n        type: \"boolean\",\n        default: false\n    },\n    taxonomySelected: {\n        type: \"string\"\n    },\n    taxTermsSelected: {\n        type: \"string\"\n    },\n    hideIfEmpty: {\n        type: \"boolean\",\n        default: true\n    },\n    emptyMessage: {\n        type: \"string\"\n    },\n    headline: {\n        type: \"string\"\n    },\n    headlineLevel: {\n        type: \"number\",\n        default: '2'\n    }\n};\n\nregisterBlockType(\"carkeek-blocks/custom-archive\", {\n    title: __(\"Custom Post Type Archive\", \"carkeek-blocks\"),\n    description: __(\n        \"Block showing the latest items by post type.\",\n        \"carkeek-blocks\"\n    ),\n    icon: \"book-alt\",\n    category: \"widgets\",\n    edit: edit,\n    attributes: attributes,\n    supports: {\n        align: [\"wide\", \"full\"]\n    },\n    save() {\n        return null;\n    }\n});\n","// extracted by mini-css-extract-plugin","import icons from './icons';\n\nimport { Component } from \"@wordpress/element\";\nimport { PlainText } from \"@wordpress/block-editor\";\nimport { Placeholder } from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\n//import { Icon } from \"@wordpress/icons\"; cannot get Icon to work, something to do with the Build, but not sure what\n\nclass FormAssemblyEdit extends Component {\n\n\n\n    render() {\n\n        const {\n            attributes,\n            setAttributes,\n        } = this.props;\n        const {\n            formId,\n        } = attributes;\n\n\n\t    //const inputId = `blocks-shortcode-input-${ instanceId }`;\n\n            return (\n                <div className=\"wp-block-carkeek-blocks-form-assembly components-placeholder\">\n                    <Placeholder className=\"components-placeholder__label\" icon={ icons.form } label={ __( 'Form Assembly Form' ) }>\n                    <label>Form Id</label>\n                    <PlainText\n                        className=\"blocks-shortcode__textarea\"\n                        value={ formId }\n                        placeholder={ __( 'Enter Form Id...' ) }\n                        onChange={ ( formId ) => setAttributes( { formId } ) }\n                    />\n                    </Placeholder>\n\n                </div>\n            );\n        }\n}\n\nexport default FormAssemblyEdit;\n","const icons =  {};\n\nicons.form = <svg width='80px' height='80px' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'>\n    <path d=\"M61 3.998H3c-1.654 0-3 1.346-3 3v52.004a1 1 0 001 1h62a1 1 0 001-1V6.998c0-1.654-1.346-3-3-3zm-59 6h60v48.004H2V9.998zm1-4h1.02c-.552 0-.994.447-.994 1s.452 1 1.005 1a1 1 0 100-2h2.988c-.552 0-.994.447-.994 1s.452 1 1.005 1a1 1 0 100-2h2.992c-.552 0-.994.447-.994 1s.452 1 1.005 1a1 1 0 100-2H61a1 1 0 011 1v1H2v-1a1 1 0 011-1z\"></path>\n      <path d=\"M8 37.008c-2.206 0-4 1.794-4 4s1.794 4 4 4 4-1.794 4-4-1.794-4-4-4zm0 6c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2zM59 28.009H5a1 1 0 00-1 1v4.999a1 1 0 001 1h54a1 1 0 001-1v-4.999a1 1 0 00-1-1zm-3.707 2.29l-.293.293-.293-.293a.995.995 0 00-.691-.29h1.969a.991.991 0 00-.692.29zM58 33.008H6v-2.999h47.984a.999.999 0 00-.691 1.704l1 1a.997.997 0 001.414 0l1-1a.999.999 0 00-.691-1.704H58v2.999z\"></path>\n      <path d=\"M8.03 40.007h-.01c-.552 0-.994.447-.994 1s.452 1 1.005 1a1 1 0 10-.001-2zM59 11.999H5a1 1 0 00-1 1v4.999a1 1 0 001 1h54a1 1 0 001-1v-4.999a1 1 0 00-1-1zm-1 4.999H6v-2.999h52v2.999zM59 20H5a1 1 0 00-1 1v4.999a1 1 0 001 1h54a1 1 0 001-1V21a1 1 0 00-1-1zm-1 4.999H6V22h52v2.999zM15 40.007h13.992a1 1 0 100-2H15a1 1 0 100 2zM22.985 42.007a1 1 0 00-1-1H15a1 1 0 100 2h6.985a1 1 0 001-1zM42.004 41.008c0-2.206-1.794-4-4-4s-4 1.794-4 4 1.794 4 4 4 4-1.794 4-4zm-6 0c0-1.103.897-2 2-2s2 .897 2 2-.897 2-2 2-2-.898-2-2zM58.996 38.007H45.004a1 1 0 100 2h13.992a1 1 0 100-2zM51.989 41.007h-6.985a1 1 0 100 2h6.985a1 1 0 100-2zM43.002 48.001H21l-.003.001A4.003 4.003 0 0017.004 52a4.003 4.003 0 003.993 3.999L21 56h22.002a4.004 4.004 0 003.995-3.999 4.004 4.004 0 00-3.995-4zM42.998 54H21.003a2 2 0 010-3.999h21.995a2 2 0 010 3.999z\"></path>\n      <path d=\"M39 51H25a1 1 0 100 2h14a1 1 0 100-2z\"></path>\n</svg>;\n\n\nexport default icons;","import \"./styles.editor.scss\";\nimport edit from \"./edit\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\n\nconst attributes = {\n    formId: {\n        type: \"string\",\n    },\n};\n\nregisterBlockType(\"carkeek-blocks/form-assembly\", {\n    title: __(\"Form Assembly Block\", \"carkeek-blocks\"),\n    description: __(\n        \"Display a Form Assembly Form\",\n        \"carkeek-blocks\"\n    ),\n    icon: \"feedback\",\n    category: \"widgets\",\n    edit: edit,\n    attributes: attributes,\n    supports: {\n        align: [\"wide\", \"full\"]\n    },\n    save() {\n        return null;\n    }\n});\n","// extracted by mini-css-extract-plugin","import \"./style.editor.scss\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody, RangeControl } from \"@wordpress/components\";\n\n\nconst attributes = {\n    columns: {\n        type: \"number\",\n        default: 3,\n    },\n};\n\nregisterBlockType(\"carkeek-blocks/link-gallery\", {\n    title: __(\"Link Gallery\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Block showing a collection of linked images\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: \"grid-view\",\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n\n    keywords: [\n        __(\"tiles\", \"carkeek-blocks\"),\n        __(\"columns\", \"carkeek-blocks\"),\n        __(\"links\", \"carkeek-blocks\"),\n        __(\"logos\", \"carkeek-blocks\"),\n        __(\"gallery\", \"carkeek-blocks\")\n    ],\n\n    attributes,\n\n    edit({ className, attributes, setAttributes }) {\n        const { columns } = attributes;\n        const updateColumns = ( value ) => {\n            setAttributes( {\n                columns: value,\n            });\n        }\n        return (\n            <div className={`${className} has-${columns}-columns`}>\n                <InspectorControls>\n                    <PanelBody>\n                        <RangeControl\n                            label={__(\"Columns\", \"carkeek-blocks\")}\n                            value={columns}\n                            onChange={ updateColumns }\n                            min={1}\n                            max={6}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks\n                    allowedBlocks={[\"core/image\"]}\n                    orientation=\"horizontal\"\n                />\n            </div>\n        );\n    },\n\n    save( { attributes } ) {\n        const { columns } = attributes;\n        return (\n            <div className={`has-${columns}-columns`}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    }\n});","// extracted by mini-css-extract-plugin","import { Component } from \"@wordpress/element\";\nimport {\n    MediaPlaceholder,\n    BlockControls,\n    MediaUpload,\n    MediaUploadCheck,\n    InspectorControls,\n    URLInput,\n    PanelColorSettings,\n    withColors\n} from \"@wordpress/block-editor\";\nimport { __ } from \"@wordpress/i18n\";\nimport { isBlobURL } from \"@wordpress/blob\";\nimport {\n    Spinner,\n    withNotices,\n    Toolbar,\n    IconButton,\n    PanelBody,\n    SelectControl,\n    TextControl,\n    FocalPointPicker\n} from \"@wordpress/components\";\nimport { withSelect } from \"@wordpress/data\";\nimport { compose } from \"@wordpress/compose\";\nimport classnames from \"classnames\";\n\nclass LinkTileEdit extends Component {\n    state = {\n        selectedLink: null\n    };\n\n    componentDidMount() {\n        const { attributes, setAttributes } = this.props;\n        const { imgUrl, imgId } = attributes;\n        if (imgUrl && isBlobURL(imgUrl) && !imgId) {\n            setAttributes({\n                imgUrl: \"\",\n                alt: \"\"\n            });\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isSelected && !this.props.isSelected) {\n            this.setState({\n                selectedLink: null\n            });\n        }\n    }\n    onChangeTitle = title => {\n        this.props.setAttributes({ title });\n    };\n    onChangeLinkTitle = linkTitle => {\n        this.props.setAttributes({ linkTitle });\n    };\n\n    onChangeLink = linkUrl => {\n        this.props.setAttributes({ linkUrl });\n    };\n\n    onSelectImage = ({ id, url }) => {\n        this.props.setAttributes({\n            imgId: id,\n            imgUrl: url\n        });\n    };\n    onUploadError = message => {\n        const { noticeOperations } = this.props;\n        noticeOperations.createErrorNotice(message);\n    };\n    removeImage = () => {\n        this.props.setAttributes({\n            imgId: null,\n            imgUrl: \"\"\n        });\n    };\n    onImageSizeChange = imgUrl => {\n        this.props.setAttributes({\n            imgUrl\n        });\n    };\n    getImageSizes() {\n        const { image, imageSizes } = this.props;\n        if (!image) return [];\n        let options = [];\n        const sizes = image.media_details.sizes;\n        for (const key in sizes) {\n            const size = sizes[key];\n            const imageSize = imageSizes.find(size => size.slug === key);\n            if (imageSize) {\n                options.push({\n                    label: imageSize.name,\n                    value: size.source_url\n                });\n            }\n        }\n        return options;\n    }\n\n    render() {\n        //console.log(this.props);\n        const {\n            className,\n            attributes,\n            noticeUI,\n            isSelected,\n            backgroundColor,\n            setAttributes,\n            setBackgroundColor\n        } = this.props;\n        const {\n            title,\n            imgUrl,\n            linkUrl,\n            linkTitle,\n            imgId,\n            focalPoint\n        } = attributes;\n\n        const imageStyle = {\n            backgroundImage: `url( ${imgUrl} )`\n        };\n        if (focalPoint) {\n            imageStyle.backgroundPosition = `${focalPoint.x *\n                100}% ${focalPoint.y * 100}%`;\n        }\n        const bgColorClass = classnames({\n            \"has-background-color\": backgroundColor.color,\n            \"wp-block-carkeek-blocks-link-tile__bg\": true\n        });\n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody title={__(\"Image Settings\", \"carkeek-blocks\")}>\n                        {imgId && (\n                            <SelectControl\n                                label={__(\"Image Size\", \"carkeek-blocks\")}\n                                options={this.getImageSizes()}\n                                onChange={this.onImageSizeChange}\n                                value={imgUrl}\n                            />\n                        )}\n                        {imgId && (\n                            <FocalPointPicker\n                                label={__(\"Focal Point\", \"carkeek-blocks\")}\n                                url={imgUrl}\n                                onChange={newFocalPoint =>\n                                    setAttributes({\n                                        focalPoint: newFocalPoint\n                                    })\n                                }\n                                value={focalPoint}\n                            />\n                        )}\n                    </PanelBody>\n                    <PanelColorSettings\n                        title={__(\"Color Settings\", \"carkeek-blocks\")}\n                        colorSettings={[\n                            {\n                                value: backgroundColor.color,\n                                onChange: setBackgroundColor,\n                                label: __(\"Background Color\", \"carkeek-blocks\"),\n                                clearable: false\n                            }\n                        ]}\n                    ></PanelColorSettings>\n                </InspectorControls>\n                <BlockControls>\n                    {imgUrl && (\n                        <Toolbar>\n                            {imgId && (\n                                <MediaUploadCheck>\n                                    <MediaUpload\n                                        onSelect={this.onSelectImage}\n                                        allowedTypes={[\"image\"]}\n                                        value={imgId}\n                                        render={({ open }) => {\n                                            return (\n                                                <IconButton\n                                                    className=\"components-icon-button components-toolbar__control\"\n                                                    label={__(\n                                                        \"Edit Image\",\n                                                        \"carkeek-blocks\"\n                                                    )}\n                                                    onClick={open}\n                                                    icon=\"edit\"\n                                                />\n                                            );\n                                        }}\n                                    />\n                                </MediaUploadCheck>\n                            )}\n                            <IconButton\n                                className=\"components-icon-button components-toolbar__control\"\n                                label={__(\"Remove Image\", \"carkeek-blocks\")}\n                                onClick={this.removeImage}\n                                icon=\"trash\"\n                            />\n                        </Toolbar>\n                    )}\n                </BlockControls>\n                <div className={className}>\n                    {imgUrl ? (\n                        <>\n                            <div\n                                className={\n                                    \"wp-block-carkeek-blocks-link-tile__img\"\n                                }\n                                style={imageStyle}\n                            >\n                                {isBlobURL(imgUrl) && <Spinner />}\n                                {isSelected ? (\n                                    <TextControl\n                                        className={\n                                            \"wp-block-carkeek-blocks-link-tile__title\"\n                                        }\n                                        onChange={this.onChangeTitle}\n                                        value={title}\n                                        placeholder={__(\n                                            \"Title\",\n                                            \"carkeek-blocks\"\n                                        )}\n                                    />\n                                ) : (\n                                    <h4>{title}</h4>\n                                )}\n                            </div>\n                            {isSelected && (\n                                <div\n                                    className={bgColorClass}\n                                    style={{\n                                        backgroundColor: backgroundColor.color\n                                    }}\n                                >\n                                    <TextControl\n                                        className={\n                                            \"wp-block-carkeek-blocks-link-tile__title_hover\"\n                                        }\n                                        onChange={this.onChangeLinkTitle}\n                                        value={linkTitle}\n                                        label={__(\n                                            \"Hover State Title\",\n                                            \"carkeek-blocks\"\n                                        )}\n                                    />\n\n                                    <URLInput\n                                        value={linkUrl}\n                                        onChange={this.onChangeLink}\n                                        label={__(\"Links To\", \"carkeek-blocks\")}\n                                    />\n                                </div>\n                            )}\n                        </>\n                    ) : (\n                        <MediaPlaceholder\n                            icon=\"format-image\"\n                            onSelect={this.onSelectImage}\n                            onError={this.onUploadError}\n                            //accept=\"image/*\"\n                            allowedTypes={[\"image\"]}\n                            notices={noticeUI}\n                            labels={{\n                                title: \"Tile Image\",\n                                instructions:\n                                    \"Upload an image file or pick one from your media library.\"\n                            }}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default compose([\n    withSelect((select, props) => {\n        const imgId = props.attributes.imgId;\n        return {\n            image: imgId ? select(\"core\").getMedia(imgId) : null,\n            imageSizes: select(\"core/editor\").getEditorSettings().imageSizes\n        };\n    }),\n    withColors({ backgroundColor: \"background-color\" }),\n    withNotices\n])(LinkTileEdit);\n","import \"./style.editor.scss\";\nimport \"./parent\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport edit from \"./edit\";\nimport { getColorClassName } from \"@wordpress/block-editor\";\nimport classnames from \"classnames\";\n\nconst attributes = {\n    title: {\n        type: \"string\"\n    },\n    imgId: {\n        type: \"number\"\n    },\n    imgUrl: {\n        type: \"string\"\n    },\n    linkTitle: {\n        type: \"string\"\n    },\n    linkUrl: {\n        type: \"string\",\n        source: \"attribute\",\n        selector: \"a\",\n        attribute: \"href\"\n    },\n    backgroundColor: {\n        type: \"string\",\n        default: \"theme-green\"\n    },\n    textColor: {\n        type: \"string\"\n    },\n    focalPoint: {\n        type: \"object\"\n    }\n\n};\n\nregisterBlockType(\"carkeek-blocks/link-tile\", {\n    title: __(\"Link Tile\", \"carkeek-blocks\"),\n\n    description: __(\n        \" Block that displays a link with an image background and hover state. \",\n        \"carkeek-blocks\"\n    ),\n\n    icon: \"admin-links\",\n\n    parent: [\"carkeek-blocks/link-tiles\"],\n\n    supports: {\n        reusable: false,\n        html: false\n    },\n\n    category: \"widgets\",\n\n    keywords: [__(\"link\", \"carkeek-blocks\"), __(\"tile\", \"carkeek-blocks\")],\n\n    attributes,\n\n    save: ({ attributes, className }) => {\n        const {\n            title,\n            imgUrl,\n            linkTitle,\n            linkUrl,\n            backgroundColor,\n            focalPoint\n        } = attributes;\n        const imageStyle = {\n            backgroundImage: `url( ${imgUrl} )`\n        };\n        if (focalPoint) {\n            imageStyle.backgroundPosition = `${focalPoint.x *\n                100}% ${focalPoint.y * 100}%`;\n        }\n        const backgroundClass = getColorClassName(\n            \"background-color\",\n            backgroundColor\n        );\n        const classes = classnames(className, {\n            [backgroundClass]: backgroundClass,\n            \"wp-block-column\": true\n        });\n        return (\n            <div className={classes}>\n                {imgUrl && (\n                    <a\n                        className={\n                            \"wp-block-carkeek-blocks-link-tile__link wp-block-carkeek-blocks-link-tile__inner\"\n                        }\n                        href={linkUrl}\n                    >\n                        <div\n                            style={imageStyle}\n                            className={\n                                \"wp-block-carkeek-blocks-link-tile__img wp-block-carkeek-blocks-link-tile__inner\"\n                            }\n                        >\n                            <span className=\"link-tile__title\">{title}</span>\n                        </div>\n                        <span className=\"link-tile__hover_title\">\n                            {linkTitle ? linkTitle : title}\n                        </span>\n                    </a>\n                )}\n            </div>\n        );\n    },\n\n    edit\n});\n","import { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks } from \"@wordpress/block-editor\";\n\nconst attributes = {\n    align: {\n        type: \"string\",\n    }\n};\n\nregisterBlockType(\"carkeek-blocks/link-tiles\", {\n    title: __(\"Link Tiles\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Block showing a collection of linked tiles\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: \"grid-view\",\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n\n    keywords: [\n        __(\"tiles\", \"carkeek-blocks\"),\n        __(\"columns\", \"carkeek-blocks\"),\n        __(\"links\", \"carkeek-blocks\")\n    ],\n\n    attributes,\n\n    edit({ className }) {\n        return (\n            <div className={`${className} wp-block-columns`}>\n                <InnerBlocks\n                    allowedBlocks={[\"carkeek-blocks/link-tile\"]}\n                    template={[\n                        [\"carkeek-blocks/link-tile\"],\n                        [\"carkeek-blocks/link-tile\"]\n                    ]}\n                    orientation=\"horizontal\"\n                />\n            </div>\n        );\n    },\n\n    save() {\n        return (\n            <div className={\"wp-block-columns\"}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    }\n});\n","// extracted by mini-css-extract-plugin","import { withSelect } from '@wordpress/data';\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\n\n\n\nregisterBlockType(\"carkeek-blocks/title-block\", {\n    title: __(\"Title Block\", \"carkeek-blocks\"),\n    description: __(\n        \"Place the page title within your page\",\n        \"carkeek-blocks\"\n    ),\n    icon: \"feedback\",\n    category: \"widgets\",\n    attributes: {\n        postTitle: {\n            type: \"string\",\n        }\n    },\n    edit: withSelect(\n        ( select ) => {\n          return {\n            title: select( 'core/editor' ).getEditedPostAttribute( 'title' ),\n          }\n        } )( props => {\n          return (\n            <h1>{ props.title }</h1>\n          )\n      } ),\n    supports: {},\n    save( ) {\n        return null;\n    }\n});\n","import { Component } from \"@wordpress/element\";\nimport { withSelect } from \"@wordpress/data\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, RichText } from \"@wordpress/block-editor\";\n\n\nclass ImageRollover extends Component {\n    render() {\n        const {\n            attributes,\n            setAttributes,\n            className,\n            innerBlocksHeadlineLevel\n        } = this.props;\n        const {\n            rolloverText,\n            rolloverHeadline,\n        } = attributes;\n        const headerTag = 'h' + innerBlocksHeadlineLevel;\n        return (\n            <div className={className}>\n                <div className=\"wp-block-carkeek-blocks-rollover-image--images\">\n                    <InnerBlocks\n                        templateLock={true}\n                        template={[\n                            [\"core/image\", { className: 'image-01' }],\n                            [\"core/image\", { className: 'image-02' }],\n                        ]}\n                        orientation=\"horizontal\"\n                    />\n                </div>\n                <div className=\"wp-block-carkeek-blocks-rollover-image--text\">\n                    <RichText\n                        tagName={ headerTag }\n                        value={ rolloverHeadline }\n                        onChange={ ( rolloverHeadline ) => setAttributes( { rolloverHeadline } ) }\n                        placeholder={ __('Rollover Heading...')}\n                        formattingControls={ [ ] }\n                    />\n                    <RichText\n                        tagName={ 'p' }\n                        value={ rolloverText }\n                        onChange={ ( rolloverText ) => setAttributes( { rolloverText } ) }\n                        placeholder={ __('Rollover Content...')}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withSelect((select, props) => {\n    const parentId = select( 'core/block-editor' ).getBlockHierarchyRootClientId( props.clientId );\n    const parentAttributes = select('core/block-editor').getBlockAttributes( parentId );\n\n    return {\n        innerBlocksHeadlineLevel: parentAttributes.innerBlocksHeadlineLevel\n    };\n})(ImageRollover);\n","const icons =  {};\n\nicons.swap = <svg width='40px' height='40px' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'>\n    <path d=\"M5.9 8H42.5V44.6H5.9z\"></path>\n      <path d=\"M32.6 61.9h7L28.5 51 17.4 62h7c1 12.6 11.7 22.6 24.6 22.6v-8.1c-8.4-.1-15.4-6.4-16.4-14.6zM66.7 38.4h-6.9l11.1 11.1L82 38.4h-7c-1-12.6-11.7-22.6-24.7-22.6V24c8.4 0 15.4 6.3 16.4 14.4z\"></path>\n      <circle cx=\"73\" cy=\"75.1\" r=\"18.3\"></circle>\n\n</svg>;\n\n\nexport default icons;","import \"./style.editor.scss\";\nimport \"./parent\";\nimport icons from './icons';\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport edit from \"./edit\";\nimport { InnerBlocks, RichText } from \"@wordpress/block-editor\";\n\nconst attributes = {\n    rolloverText: {\n        type: \"string\"\n    },\n    rolloverHeadline: {\n        type: \"string\"\n    },\n    inheritedHeaderStyle: {\n        type: \"string\"\n    }\n};\n\nregisterBlockType(\"carkeek-blocks/rollover-image\", {\n    title: __(\"Rollover Image\", \"carkeek-blocks\"),\n\n    description: __(\n        \" Block that displays a link with an image background and hover state. \",\n        \"carkeek-blocks\"\n    ),\n\n    icon: {\n        src: icons.swap,\n    },\n\n    parent: [\"carkeek-blocks/rollover-images\"],\n\n    supports: {\n        reusable: false,\n        html: false\n    },\n\n    category: \"widgets\",\n\n    keywords: [__(\"image\", \"carkeek-blocks\"), __(\"rollover\", \"carkeek-blocks\")],\n\n    attributes,\n\n    save: ({ attributes }) => {\n        const {\n            rolloverText,\n            rolloverHeadline\n        } = attributes;\n        return (\n            <div>\n                <InnerBlocks.Content />\n                <div className=\"image-rollover__hover_text\">\n                    <RichText.Content tagName={ 'div' } className={ 'inner-block-headline' } value={ rolloverHeadline } />\n                    <RichText.Content tagName={ 'p' } className={ 'inner-block-content' } value={ rolloverText } />\n                </div>\n            </div>\n        );\n    },\n\n    edit\n});\n","import icons from './icons';\n\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, InspectorControls, RichText } from \"@wordpress/block-editor\";\nimport { PanelBody, RangeControl, RadioControl } from \"@wordpress/components\";\n\nconst attributes = {\n    columns: {\n        type: \"number\",\n        default: 4,\n    },\n    headline: {\n        type: \"string\"\n    },\n    staticContent: {\n        type: \"string\"\n    },\n    headlineLevel: {\n        type: \"number\",\n        default: '2'\n    },\n    innerBlocksHeadlineLevel: {\n        type: \"number\",\n        default: '3'\n    },\n    rollovertextLocation: {\n        type: \"string\",\n        default: \"below\"\n    }\n};\n\nregisterBlockType(\"carkeek-blocks/rollover-images\", {\n    title: __(\"Rollover Images\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Display a collection of rollover images with related text\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: {\n        src: icons.swap,\n    },\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n\n    keywords: [\n        __(\"images\", \"carkeek-blocks\"),\n        __(\"rollover\", \"carkeek-blocks\"),\n    ],\n\n    attributes,\n\n    edit({ className, attributes, setAttributes }) {\n        const { columns, headline, headlineLevel, innerBlocksHeadlineLevel, staticContent, rollovertextLocation } = attributes;\n        const headlineStyle = 'h' + headlineLevel;\n        const updateColumns = ( value ) => {\n            setAttributes( {\n                columns: value,\n            });\n        }\n        return (\n            <>\n            <InspectorControls>\n                    <PanelBody>\n                        <RadioControl\n                            label=\"Rollover Text Location\"\n                            selected = {rollovertextLocation}\n                            options = {[\n                                { label: \"Above the Images\", value: 'above' },\n                                { label: \"Below the Images\", value: 'below' },\n                            ]}\n                            onChange={ value => setAttributes( { rollovertextLocation:value } ) }\n                        />\n                        <RangeControl\n                            label={__(\"Columns\", \"carkeek-blocks\")}\n                            value={columns}\n                            onChange={ updateColumns }\n                            min={1}\n                            max={6}\n                        />\n                        <RangeControl\n                            label={__(\"Heading Size\", \"carkeek-blocks\")}\n                            value={headlineLevel}\n                            onChange={value =>\n                                setAttributes({ headlineLevel: value })\n                            }\n                            min={2}\n                            max={6}\n                        />\n                        <RangeControl\n                            label={__(\"Inner BlocksHeading Size\", \"carkeek-blocks\")}\n                            value={innerBlocksHeadlineLevel}\n                            onChange={value =>\n                                setAttributes({ innerBlocksHeadlineLevel: value })\n                            }\n                            min={2}\n                            max={6}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <div className={`${className} has-${columns}-columns rollovertext-${rollovertextLocation}`}>\n                    <RichText\n                        tagName={ headlineStyle }\n                        value={ headline }\n                        onChange={ ( headline ) => setAttributes( { headline } ) }\n                        placeholder={ __('Heading...')}\n                        formattingControls={ [ ] }\n                    />\n                    <RichText\n                        tagName={ 'p' }\n                        value={ staticContent }\n                        onChange={ ( staticContent ) => setAttributes( { staticContent } ) }\n                        placeholder={ __('Default content...')}\n                    />\n\n                <InnerBlocks\n                    allowedBlocks={[\"carkeek-blocks/rollover-image\"]}\n                    template={[\n                        [\"carkeek-blocks/rollover-image\"],\n                    ]}\n                    orientation=\"horizontal\"\n                />\n            </div>\n            </>\n        );\n    },\n\n    save( { attributes } ) {\n        const { columns, headlineLevel, headline, innerBlocksHeadlineLevel, staticContent, rollovertextLocation } = attributes;\n        const headlineStyle = 'h' + headlineLevel ;\n        return (\n            <div className={`has-${columns}-columns innerblock-headline-style-h${innerBlocksHeadlineLevel} rollovertext-${rollovertextLocation}`}>\n                <RichText.Content tagName={ headlineStyle } className={'rollover-images__headline'} value={ headline } />\n                <div className={'rollover-images__inner'}>\n                    <InnerBlocks.Content />\n                </div>\n                <div className={'rollover-images__footer'}>\n                    <RichText.Content tagName={ 'span' } className={ 'rollover-images__default-content'} value={ staticContent } />\n                    <div className={'rollover-images__hover-content'}></div>\n                </div>\n            </div>\n        );\n    }\n});\n","// extracted by mini-css-extract-plugin","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { Button, Spinner, ButtonGroup, FocalPointPicker, PanelBody } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { BACKSPACE, DELETE } from '@wordpress/keycodes';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { RichText, MediaPlaceholder, InspectorControls, URLInputButton } from '@wordpress/block-editor';\nimport { isBlobURL } from '@wordpress/blob';\nimport { compose } from '@wordpress/compose';\nimport icons from './icons';\nimport { Icon, check, chevronLeft, chevronRight } from '@wordpress/icons';\n// import {\n// \tcloseSmall,\n// \tchevronLeft,\n// \tchevronRight,\n// \tedit,\n// \timage as imageIcon,\n// } from './icons';\n\n/**\n * Internal dependencies\n */\nimport { pickRelevantMediaFiles } from './shared';\n\nconst isTemporaryImage = ( id, url ) => ! id && isBlobURL( url );\n\nclass GalleryImage extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onSelectImage = this.onSelectImage.bind( this );\n        this.onSelectCaption = this.onSelectCaption.bind( this );\n\t\tthis.onRemoveImage = this.onRemoveImage.bind( this );\n\t\tthis.bindContainer = this.bindContainer.bind( this );\n\t\tthis.onEdit = this.onEdit.bind( this );\n\t\tthis.onSelectImageFromLibrary = this.onSelectImageFromLibrary.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onSetUrl = this.onSetUrl.bind( this );\n        this.onSetFocalPoint = this.onSetFocalPoint.bind( this );\n\t\tthis.state = {\n\t\t\tcaptionSelected: false,\n\t\t\tisEditing: false,\n\t\t};\n\t}\n\n\tbindContainer( ref ) {\n\t\tthis.container = ref;\n\t}\n\n\tonSelectCaption() {\n\t\tif ( ! this.state.captionSelected ) {\n\t\t\tthis.setState( {\n\t\t\t\tcaptionSelected: true,\n\t\t\t} );\n\t\t}\n\n\t\tif ( ! this.props.isSelected ) {\n\t\t\tthis.props.onSelect();\n\t\t}\n\t}\n\n\tonSelectImage() {\n\t\tif ( ! this.props.isSelected ) {\n\t\t\tthis.props.onSelect();\n\t\t}\n\n\t\tif ( this.state.captionSelected ) {\n\t\t\tthis.setState( {\n\t\t\t\tcaptionSelected: false,\n\t\t\t} );\n\t\t}\n\t}\n\n\tonRemoveImage( event ) {\n\t\tif (\n\t\t\tthis.container === document.activeElement &&\n\t\t\tthis.props.isSelected &&\n\t\t\t[ BACKSPACE, DELETE ].indexOf( event.keyCode ) !== -1\n\t\t) {\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.onRemove();\n\t\t}\n\t}\n\n\tonEdit() {\n\t\tthis.setState( {\n\t\t\tisEditing: true,\n\t\t} );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst {\n\t\t\tisSelected,\n\t\t\timage,\n\t\t\turl,\n\t\t\t__unstableMarkNextChangeAsNotPersistent,\n\t\t} = this.props;\n\t\tif ( image && ! url ) {\n\t\t\t__unstableMarkNextChangeAsNotPersistent();\n\t\t\tthis.props.setAttributes( {\n\t\t\t\turl: image.source_url,\n\t\t\t\talt: image.alt_text,\n\t\t\t} );\n\t\t}\n\n\t\t// unselect the caption so when the user selects other image and comeback\n\t\t// the caption is not immediately selected\n\t\tif (\n\t\t\tthis.state.captionSelected &&\n\t\t\t! isSelected &&\n\t\t\tprevProps.isSelected\n\t\t) {\n\t\t\tthis.setState( {\n\t\t\t\tcaptionSelected: false,\n\t\t\t} );\n\t\t}\n\t}\n\n\tdeselectOnBlur() {\n\t\tthis.props.onDeselect();\n\t}\n\n\tonSelectImageFromLibrary( media ) {\n\t\tconst { setAttributes, id, url, alt, caption, sizeSlug } = this.props;\n\t\tif ( ! media || ! media.url ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet mediaAttributes = pickRelevantMediaFiles( media, sizeSlug );\n\n\t\t// If the current image is temporary but an alt text was meanwhile\n\t\t// written by the user, make sure the text is not overwritten.\n\t\tif ( isTemporaryImage( id, url ) ) {\n\t\t\tif ( alt ) {\n\t\t\t\tmediaAttributes = omit( mediaAttributes, [ 'alt' ] );\n\t\t\t}\n\t\t}\n\n\t\t// If a caption text was meanwhile written by the user,\n\t\t// make sure the text is not overwritten by empty captions.\n\t\tif ( caption && ! get( mediaAttributes, [ 'caption' ] ) ) {\n\t\t\tmediaAttributes = omit( mediaAttributes, [ 'caption' ] );\n\t\t}\n\n\t\tsetAttributes( mediaAttributes );\n\t\tthis.setState( {\n\t\t\tisEditing: false,\n\t\t} );\n\t}\n\n\tonSetUrl( url ) {\n\t\tconst { setAttributes } = this.props;\n        setAttributes( {\n            linksto: url\n        } );\n\t}\n\n    onSetFocalPoint( focalPoint ) {\n        const { setAttributes } = this.props;\n        setAttributes( {\n            focalPointX: focalPoint.x,\n            focalPointY: focalPoint.y,\n        } );\n    }\n\n\trender() {\n\t\tconst {\n\t\t\turl,\n\t\t\talt,\n\t\t\tid,\n            linksto,\n            focalPointX,\n            focalPointY,\n\t\t\tisFirstItem,\n\t\t\tisLastItem,\n\t\t\tisSelected,\n\t\t\tcaption,\n\t\t\tonRemove,\n\t\t\tonMoveForward,\n\t\t\tonMoveBackward,\n\t\t\tsetAttributes,\n\t\t\t'aria-label': ariaLabel,\n\t\t} = this.props;\n\t\tconst { isEditing } = this.state;\n\n        const imageStyle = {\n            objectPosition : `${focalPointX *\n                100}% ${focalPointY * 100}%`\n        }\n\n\t\tconst img = (\n\t\t\t// Disable reason: Image itself is not meant to be interactive, but should\n\t\t\t// direct image selection and unfocus caption fields.\n\t\t\t/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\t\t\t<>\n\t\t\t\t<img\n\t\t\t\t\tsrc={ url }\n\t\t\t\t\talt={ alt }\n\t\t\t\t\tdata-id={ id }\n\t\t\t\t\tonClick={ this.onSelectImage }\n\t\t\t\t\tonFocus={ this.onSelectImage }\n\t\t\t\t\tonKeyDown={ this.onRemoveImage }\n\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\taria-label={ ariaLabel }\n                    ref={ this.bindContainer }\n                    style={ imageStyle }\n\t\t\t\t/>\n\t\t\t\t{ isBlobURL( url ) && <Spinner /> }\n\t\t\t</>\n\t\t\t/* eslint-enable jsx-a11y/no-noninteractive-element-interactions */\n\t\t);\n\n\t\tconst className = classnames( {\n\t\t\t'is-selected': isSelected,\n\t\t\t'is-transient': isBlobURL( url ),\n        } );\n\n\n\t\treturn (\n            <>\n\n            <InspectorControls>\n            { isSelected && (\n                <PanelBody title={__(\"Image Settings\", \"carkeek-blocks\")}>\n                    <FocalPointPicker\n                            label={__(\"Focal Point\", \"carkeek-blocks\")}\n                            url={url}\n                            onChange={this.onSetFocalPoint}\n                            value={ {x: focalPointX, y: focalPointY }}\n                    />\n                </PanelBody>\n            )}\n            </InspectorControls>\n\n\t\t\t<figure className={ className }>\n\t\t\t\t{ ! isEditing && ( img ) }\n\t\t\t\t{ isEditing && (\n\t\t\t\t\t<MediaPlaceholder\n\t\t\t\t\t\tlabels={ { title: __( 'Edit gallery image' ) } }\n\t\t\t\t\t\ticon={ icons.imageIcon }\n\t\t\t\t\t\tonSelect={ this.onSelectImageFromLibrary }\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tallowedTypes={ [ 'image' ] }\n\t\t\t\t\t\tvalue={ { id, src: url } }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\n\t\t\t\t<ButtonGroup className=\"block-library-gallery-item__inline-menu carkeek-edit is-left\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon={ icons.chevronLeft }\n\t\t\t\t\t\tonClick={ isFirstItem ? undefined : onMoveBackward }\n\t\t\t\t\t\tlabel={ __( 'Move image backward' ) }\n\t\t\t\t\t\taria-disabled={ isFirstItem }\n\t\t\t\t\t\tdisabled={ ! isSelected }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon={ icons.chevronRight }\n\t\t\t\t\t\tonClick={ isLastItem ? undefined : onMoveForward }\n\t\t\t\t\t\tlabel={ __( 'Move image forward' ) }\n\t\t\t\t\t\taria-disabled={ isLastItem }\n\t\t\t\t\t\tdisabled={ ! isSelected }\n\t\t\t\t\t/>\n\t\t\t\t</ButtonGroup>\n\n\t\t\t\t<ButtonGroup className=\"block-library-gallery-item__inline-menu carkeek-edit is-right\">\n\t\t\t\t\t<URLInputButton\n\t\t\t\t\t\turl={ linksto }\n\t\t\t\t\t\tonChange={ this.onSetUrl }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon={ icons.edit }\n\t\t\t\t\t\tonClick={ this.onEdit }\n\t\t\t\t\t\tlabel={ __( 'Replace image' ) }\n\t\t\t\t\t\tdisabled={ ! isSelected }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon={ icons.closeSmall }\n\t\t\t\t\t\tonClick={ onRemove }\n\t\t\t\t\t\tlabel={ __( 'Remove image' ) }\n\t\t\t\t\t\tdisabled={ ! isSelected }\n\t\t\t\t\t/>\n\n\t\t\t\t</ButtonGroup>\n\t\t\t\t{ ! isEditing && ( isSelected || caption ) && (\n\t\t\t\t\t<RichText\n\t\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\tisSelected ? __( 'Write caption…' ) : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={ caption }\n\t\t\t\t\t\tisSelected={ this.state.captionSelected }\n\t\t\t\t\t\tonChange={ ( newCaption ) =>\n\t\t\t\t\t\t\tsetAttributes( { caption: newCaption } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tunstableOnFocus={ this.onSelectCaption }\n\t\t\t\t\t\tinlineToolbar\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</figure>\n            </>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, ownProps ) => {\n\t\tconst { getMedia } = select( 'core' );\n\t\tconst { id } = ownProps;\n\n\t\treturn {\n\t\t\timage: id ? getMedia( parseInt( id, 10 ) ) : null,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { __unstableMarkNextChangeAsNotPersistent } = dispatch(\n\t\t\t'core/block-editor'\n\t\t);\n\t\treturn {\n\t\t\t__unstableMarkNextChangeAsNotPersistent,\n\t\t};\n\t} ),\n] )( GalleryImage );\n","\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { RichText } from '@wordpress/block-editor';\nimport { VisuallyHidden } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport GalleryImage from './gallery-img';\n\nexport const Gallery = ( props ) => {\n\tconst {\n\t\tattributes,\n\t\tclassName,\n\t\tisSelected,\n\t\tsetAttributes,\n\t\tselectedImage,\n\t\tmediaPlaceholder,\n\t\tonMoveBackward,\n\t\tonMoveForward,\n        onRemoveImage,\n\t\tonSelectImage,\n\t\tonDeselectImage,\n\t\tonSetImageAttributes,\n\t\tonFocusGalleryCaption,\n\t\tinsertBlocksAfter,\n\t} = props;\n\n\tconst {\n\t\timages,\n\t} = attributes;\n\n\treturn (\n\t\t<figure\n\t\t\tclassName={ className }\n\t\t>\n\t\t\t<ul className=\"blocks-gallery-grid\">\n\t\t\t\t{ images.map( ( img, index ) => {\n\t\t\t\t\tconst ariaLabel = sprintf(\n\t\t\t\t\t\t/* translators: 1: the order number of the image. 2: the total number of images. */\n\t\t\t\t\t\t__( 'image %1$d of %2$d in gallery' ),\n\t\t\t\t\t\tindex + 1,\n\t\t\t\t\t\timages.length\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName=\"blocks-gallery-item\"\n\t\t\t\t\t\t\tkey={ img.id || img.url }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<GalleryImage\n\t\t\t\t\t\t\t\turl={ img.url }\n\t\t\t\t\t\t\t\talt={ img.alt }\n                                id={ img.id }\n                                focalPointX={img.focalPointX}\n                                focalPointY={img.focalPointY}\n\t\t\t\t\t\t\t\tisFirstItem={ index === 0 }\n\t\t\t\t\t\t\t\tisLastItem={ index + 1 === images.length }\n\t\t\t\t\t\t\t\tisSelected={\n\t\t\t\t\t\t\t\t\tisSelected && selectedImage === index\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonMoveBackward={ onMoveBackward( index ) }\n\t\t\t\t\t\t\t\tonMoveForward={ onMoveForward( index ) }\n\t\t\t\t\t\t\t\tonRemove={ onRemoveImage( index ) }\n\t\t\t\t\t\t\t\tonSelect={ onSelectImage( index ) }\n                                onDeselect={ onDeselectImage( index ) }\n\t\t\t\t\t\t\t\tsetAttributes={ ( attrs ) =>\n\t\t\t\t\t\t\t\t\tonSetImageAttributes( index, attrs )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlinksto={img.linksto}\n\t\t\t\t\t\t\t\tcaption={ img.caption }\n\t\t\t\t\t\t\t\taria-label={ ariaLabel }\n\t\t\t\t\t\t\t\tsizeSlug={ attributes.sizeSlug }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</ul>\n\t\t\t{ mediaPlaceholder }\n\n\t\t</figure>\n\t);\n};\n\n\nexport default Gallery;","const icons =  {};\n\nicons.image = <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"100\"\n  height=\"100\"\n  x=\"0\"\n  y=\"0\"\n  viewBox=\"0 0 100 100\"\n  >\n  <path\n    style={{\n      blockProgression: \"tb\",\n      webkitTextIndent: \"0\",\n      textIndent: \"0\",\n      webkitTextTransform: \"none\",\n      textTransform: \"none\",\n    }}\n    d=\"M29.678 957.35c-1.151-.07-2.202.722-2.5 1.844l-3.344 12.594h-13c-1.354 0-2.437 1.14-2.437 2.469v62.063a2.46 2.46 0 002.437 2.437h20.22c1.052 4.913 5.406 8.625 10.624 8.625 5.219 0 9.572-3.712 10.625-8.625h20.22c.695 0 1.333-.3 1.78-.781a2.386 2.386 0 001.22-1.5l16-59.97c.346-1.303-.46-2.651-1.75-3l-59.595-16.061a2.864 2.864 0 00-.437-.094 1 1 0 00-.063 0zm-.156 2c.02.002.018-.001.031 0 .042.005.083.029.094.031l59.594 16.062c.247.067.408.32.344.563l-14.625 54.75v-11.75l10.406-39.125c.31-1.162-.385-2.402-1.563-2.72l-8.844-2.405v-.5c0-1.33-1.083-2.47-2.437-2.47h-8.625l-30.375-8.155c-.109-.03-.239-.078-.375-.094a1 1 0 00-.063 0c-1.029-.063-2.01.636-2.281 1.656l-1.781 6.594h-3.094l3.188-12.094c.058-.22.227-.343.406-.344zm3.437 6.188c.007.002.013-.005.031 0l23.188 6.25H31.117l1.624-6.094c.033-.122.121-.163.22-.157zm-22.125 8.25h13.531a1.004 1.004 0 00.5 0h4.688a1.004 1.004 0 00.5 0h33.625a1.004 1.004 0 00.218 0h8.625c.247 0 .438.196.438.468v1.22a1 1 0 000 .093v60.75a.555.555 0 01-.031.187c-.013.023-.012.036-.031.062-.07.125-.198.188-.376.188H52.553c.003-.097.03-.183.03-.282 0-.385-.022-.749-.062-1.125-.004-.043-.026-.082-.031-.125a10.83 10.83 0 00-.406-2c-.106-.34-.237-.674-.375-1a10.834 10.834 0 00-1-1.843c-.191-.283-.41-.55-.625-.813-.005-.01.005-.025 0-.03-.104-.126-.235-.224-.344-.344-.125-.138-.243-.275-.375-.407-.246-.246-.481-.496-.75-.718-.27-.223-.554-.429-.844-.625a10.82 10.82 0 00-4.969-1.813 11.3 11.3 0 00-1.125-.062c-3.457 0-6.53 1.662-8.53 4.188-.162.205-.354.408-.5.625-.005.01.004.024 0 .03-.071.106-.153.206-.22.313-.243.388-.43.8-.624 1.219-.046.098-.114.181-.157.281-.003.01.004.023 0 .031-.133.317-.24.638-.343.969-.328 1.034-.532 2.11-.532 3.25 0 .098.029.184.032.281h-19.97c-.271 0-.437-.165-.437-.437v-62.063c0-.272.19-.47.438-.47zm64.125 3.062l8.344 2.25c.121.033.163.138.125.281l-8.469 31.813V976.85zm-59.312.031a2.236 2.236 0 00-2.219 2.219v42.938a2.236 2.236 0 002.22 2.219h52.061a2.236 2.236 0 002.219-2.219v-15.531a1 1 0 000-.406v-27a2.236 2.236 0 00-2.219-2.22H15.647zm0 2H67.71c.139 0 .219.08.219.219v24.844a71.332 71.332 0 00-5.969-5.031c-4.329-3.242-9.653-6.517-14.28-5.907-3.524.465-6.625 3.834-9.063 6.938-2.037 2.592-2.995 4.334-3.438 5.094-.572-.548-1.467-1.435-3.375-2.844-2.425-1.79-5.376-3.672-8.187-3.438-2.533.212-4.816 2.282-6.657 4.188a35.368 35.368 0 00-1.53 1.687v-25.53c0-.14.08-.22.218-.22zm15.47 5.938c-3.219 0-5.845 2.639-5.845 5.875s2.626 5.875 5.844 5.875 5.844-2.64 5.844-5.875-2.626-5.875-5.844-5.875zm0 2c2.14 0 3.874 1.723 3.874 3.875s-1.735 3.843-3.875 3.843-3.844-1.691-3.844-3.843 1.704-3.875 3.844-3.875zm17.5 8.125c3.402-.047 8.23 2.623 12.155 5.562 3.78 2.83 6.616 5.643 7.156 6.188v15.344c0 .139-.08.219-.218.219H15.648c-.139 0-.219-.08-.219-.22v-14.155s1.245-1.747 2.969-3.532c1.723-1.784 3.983-3.477 5.375-3.593 1.67-.14 4.554 1.34 6.844 3.03a39.47 39.47 0 014.03 3.438 1 1 0 001.595-.218s1.608-2.88 3.937-5.844c2.329-2.965 5.47-5.883 7.781-6.188.214-.028.43-.028.657-.03zm-6.938 32.656a8.865 8.865 0 017.812 4.625c.24.443.431.92.594 1.406.129.38.266.755.344 1.156.102.542.125 1.115.125 1.688 0 .223-.016.437-.032.656-.014.146-.012.29-.03.438-.54 4.401-4.264 7.812-8.813 7.812-4.517 0-8.228-3.363-8.813-7.719a1 1 0 000-.03c-.002-.022.003-.043 0-.063-.044-.361-.093-.72-.093-1.094 0-.605.072-1.21.187-1.78.002-.01-.002-.022 0-.032a8.62 8.62 0 01.219-.812c.003-.01-.003-.022 0-.031.173-.557.382-1.09.656-1.594a9.13 9.13 0 01.969-1.406c.181-.22.392-.425.593-.625 1.005-1 2.238-1.788 3.626-2.22a9.003 9.003 0 012.656-.374zm-.125 2.219a1 1 0 00-.875 1.03v4.626h-4.625a1 1 0 100 2h4.625v4.625a1 1 0 102 0v-4.625h4.625a1 1 0 100-2h-4.625v-4.625a1 1 0 00-1.125-1.031z\"\n    color=\"#000\"\n    enableBackground=\"accumulate\"\n    transform=\"translate(0 -952.362)\"\n  ></path>\n  </svg>;\n\nicons.closeSmall = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\"\nheight=\"24\" viewBox=\"0 0 24 24\">\n<path d=\"M13 11.9l3.3-3.4-1.1-1-3.2 3.3-3.2-3.3-1.1 1 3.3 3.4-3.5 3.6 1 1L12 13l3.5 3.5 1-1z\" color=\"#000\" />\n</svg>;\n\nicons.chevronRight = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\"\nheight=\"24\" viewBox=\"0 0 24 24\">\n<path d=\"M10.6 6L9.4 7l4.6 5-4.6 5 1.2 1 5.4-6z\" color=\"#000\" />\n</svg>;\n\nicons.chevronLeft = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n<path d=\"M14.6 7l-1.2-1L8 12l5.4 6 1.2-1-4.6-5z\"  color=\"#000\" />\n</svg>;\n\nicons.edit = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n<path d=\"M20.1 5.1L16.9 2 6.2 12.7l-1.3 4.4 4.5-1.3L20.1 5.1zM4 20.8h8v-1.5H4v1.5z\" color=\"#000\" />\n</svg>;\n\n\n\n\nexport default icons;","/**\n * External dependencies\n */\nimport {\n\tevery,\n\tfilter,\n\tfind,\n\tforEach,\n\tget,\n\tisEmpty,\n\tmap,\n\treduce,\n\tsome,\n    toString,\n    pick\n} from 'lodash';\n\nimport { Component } from \"@wordpress/element\";\nimport { __ } from \"@wordpress/i18n\";\nimport { isBlobURL } from \"@wordpress/blob\";\nimport {\n    Path,\n    SVG,\n    PanelRow,\n    Spinner,\n    withNotices,\n    Toolbar,\n    IconButton,\n    PanelBody,\n    SelectControl,\n    TextControl,\n    FocalPointPicker,\n    RangeControl,\n    ToggleControl,\n    TextareaControl,\n    RadioControl,\n    Button\n} from \"@wordpress/components\";\nimport { withSelect } from \"@wordpress/data\";\nimport { compose } from \"@wordpress/compose\";\nimport classnames from \"classnames\";\nimport { InnerBlocks,\n    MediaPlaceholder,\n    MediaUpload,\n    MediaUploadCheck,\n    InspectorControls,\n    RichText } from \"@wordpress/block-editor\";\n\nimport icons from './icons';\nimport { pickRelevantMediaFiles } from './shared';\n\n\nimport Gallery from './gallery';\n\n\n\nclass ImgSliderEdit extends Component {\n\n    constructor() {\n        super( ...arguments );\n\n        this.onSelectImage = this.onSelectImage.bind( this );\n        this.onSelectImages = this.onSelectImages.bind( this );\n        this.onDeselectImage = this.onDeselectImage.bind( this );\n        this.setColumnsNumber = this.setColumnsNumber.bind( this );\n        this.toggleImageCrop = this.toggleImageCrop.bind( this );\n        this.onMove = this.onMove.bind( this );\n        this.onMoveForward = this.onMoveForward.bind( this );\n        this.onMoveBackward = this.onMoveBackward.bind( this );\n        this.onRemoveImage = this.onRemoveImage.bind( this );\n        this.onUploadError = this.onUploadError.bind( this );\n        this.setImageAttributes = this.setImageAttributes.bind( this );\n        this.setAttributes = this.setAttributes.bind( this );\n        this.onFocusGalleryCaption = this.onFocusGalleryCaption.bind( this );\n        this.getImagesSizeOptions = this.getImagesSizeOptions.bind( this );\n        this.updateImagesSize = this.updateImagesSize.bind( this );\n\n        this.state = {\n            selectedImage: null,\n            attachmentCaptions: null,\n        };\n    }\n\n    insertBlocksAfter( blocks ) {\n\t\tthis.props.onInsertBlocks( blocks, this.props.order + 1 );\n\n\t\tif ( blocks[ 0 ] ) {\n\t\t\t// focus on the first block inserted\n\t\t\tthis.props.onSelect( blocks[ 0 ].clientId );\n\t\t}\n\t}\n\n    setAttributes( attributes ) {\n        if ( attributes.ids ) {\n            throw new Error(\n                'The \"ids\" attribute should not be changed directly. It is managed automatically when \"images\" attribute changes'\n            );\n        }\n\n        if ( attributes.images ) {\n            attributes = {\n                ...attributes,\n                // Unlike images[ n ].id which is a string, always ensure the\n                // ids array contains numbers as per its attribute type.\n                ids: map( attributes.images, ( { id } ) => parseInt( id, 10 ) ),\n            };\n        }\n\n        this.props.setAttributes( attributes );\n    }\n\n    onSelectImage( index ) {\n        return () => {\n            if ( this.state.selectedImage !== index ) {\n                this.setState( {\n                    selectedImage: index,\n                } );\n            }\n        };\n    }\n\n    onDeselectImage( index ) {\n        return () => {\n            if ( this.state.selectedImage === index ) {\n                this.setState( {\n                    selectedImage: null,\n                } );\n            }\n        };\n    }\n\n    onMove( oldIndex, newIndex ) {\n        const images = [ ...this.props.attributes.images ];\n        images.splice( newIndex, 1, this.props.attributes.images[ oldIndex ] );\n        images.splice( oldIndex, 1, this.props.attributes.images[ newIndex ] );\n        this.setState( { selectedImage: newIndex } );\n        this.setAttributes( { images } );\n    }\n\n    onMoveForward( oldIndex ) {\n        return () => {\n            if ( oldIndex === this.props.attributes.images.length - 1 ) {\n                return;\n            }\n            this.onMove( oldIndex, oldIndex + 1 );\n        };\n    }\n\n    onMoveBackward( oldIndex ) {\n        return () => {\n            if ( oldIndex === 0 ) {\n                return;\n            }\n            this.onMove( oldIndex, oldIndex - 1 );\n        };\n    }\n\n    onRemoveImage( index ) {\n        return () => {\n            const images = filter(\n                this.props.attributes.images,\n                ( img, i ) => index !== i\n            );\n            const { columns } = this.props.attributes;\n            this.setState( { selectedImage: null } );\n            this.setAttributes( {\n                images,\n                columns: columns ? Math.min( images.length, columns ) : columns,\n            } );\n        };\n    }\n\n    selectCaption( newImage, images, attachmentCaptions ) {\n        // The image id in both the images and attachmentCaptions arrays is a\n        // string, so ensure comparison works correctly by converting the\n        // newImage.id to a string.\n        const newImageId = toString( newImage.id );\n        const currentImage = find( images, { id: newImageId } );\n\n        const currentImageCaption = currentImage\n            ? currentImage.caption\n            : newImage.caption;\n\n        if ( ! attachmentCaptions ) {\n            return currentImageCaption;\n        }\n\n        const attachment = find( attachmentCaptions, {\n            id: newImageId,\n        } );\n\n        // if the attachment caption is updated\n        if ( attachment && attachment.caption !== newImage.caption ) {\n            return newImage.caption;\n        }\n\n        return currentImageCaption;\n    }\n\n    onSelectImages( newImages ) {\n        const { images, sizeSlug } = this.props.attributes;\n        const { attachmentCaptions } = this.state;\n        this.setState( {\n            attachmentCaptions: newImages.map( ( newImage ) => ( {\n                // Store the attachmentCaption id as a string for consistency\n                // with the type of the id in the images attribute.\n                id: toString( newImage.id ),\n                caption: newImage.caption,\n            } ) ),\n        } );\n        this.setAttributes( {\n            images: newImages.map( ( newImage ) => ( {\n                ...pickRelevantMediaFiles( newImage, sizeSlug ),\n                caption: this.selectCaption(\n                    newImage,\n                    images,\n                    attachmentCaptions\n                ),\n                // The id value is stored in a data attribute, so when the\n                // block is parsed it's converted to a string. Converting\n                // to a string here ensures it's type is consistent.\n                id: toString( newImage.id ),\n            } ) ),\n        } );\n    }\n\n    onUploadError( message ) {\n        const { noticeOperations } = this.props;\n        noticeOperations.removeAllNotices();\n        noticeOperations.createErrorNotice( message );\n    }\n\n    setColumnsNumber( value ) {\n        this.setAttributes( { columns: value } );\n    }\n\n    toggleImageCrop() {\n        this.setAttributes( { imageCrop: ! this.props.attributes.imageCrop } );\n    }\n\n    getImageCropHelp( checked ) {\n        return checked\n            ? __( 'Thumbnails are cropped to align.' )\n            : __( 'Thumbnails are not cropped.' );\n    }\n\n    onFocusGalleryCaption() {\n        this.setState( {\n            selectedImage: null,\n        } );\n    }\n\n    setImageAttributes( index, attributes ) {\n        const {\n            attributes: { images },\n        } = this.props;\n        const { setAttributes } = this;\n        if ( ! images[ index ] ) {\n            return;\n        }\n        setAttributes( {\n            images: [\n                ...images.slice( 0, index ),\n                {\n                    ...images[ index ],\n                    ...attributes,\n                },\n                ...images.slice( index + 1 ),\n            ],\n        } );\n    }\n\n    getImagesSizeOptions() {\n        const { imageSizes, resizedImages } = this.props;\n        return map(\n            filter( imageSizes, ( { slug } ) =>\n                some( resizedImages, ( sizes ) => sizes[ slug ] )\n            ),\n            ( { name, slug } ) => ( { value: slug, label: name } )\n        );\n    }\n\n    updateImagesSize( sizeSlug ) {\n        const {\n            attributes: { images },\n            resizedImages,\n        } = this.props;\n\n        const updatedImages = map( images, ( image ) => {\n            if ( ! image.id ) {\n                return image;\n            }\n            const url = get( resizedImages, [\n                parseInt( image.id, 10 ),\n                sizeSlug,\n            ] );\n            return {\n                ...image,\n                ...( url && { url } ),\n            };\n        } );\n\n        this.setAttributes( { images: updatedImages, sizeSlug } );\n    }\n\n    componentDidMount() {\n        const { attributes, mediaUpload } = this.props;\n        const { images } = attributes;\n        if (\n            images &&\n            images.length > 0 &&\n            every( images, ( { url } ) => isBlobURL( url ) )\n        ) {\n            const filesList = map( images, ( { url } ) => getBlobByURL( url ) );\n            forEach( images, ( { url } ) => revokeBlobURL( url ) );\n            mediaUpload( {\n                filesList,\n                onFileChange: this.onSelectImages,\n                allowedTypes: [ 'image' ],\n            } );\n        }\n    }\n\n    componentDidUpdate( prevProps ) {\n        // Deselect images when deselecting the block\n        if ( ! this.props.isSelected && prevProps.isSelected ) {\n            this.setState( {\n                selectedImage: null,\n                captionSelected: false,\n            } );\n        }\n    }\n\n    render(){\n        const {\n            className,\n            attributes,\n            noticeUI,\n            isSelected,\n            setAttributes,\n        } = this.props;\n        const {\n            images,\n            autoPlay,\n            autoPlaySpeed,\n            sliderType,\n            textOverlay,\n            transitionSpeed,\n            showDots,\n            headerText,\n            desktopText,\n            slidesToScroll,\n            transitionType,\n            slidesToShow,\n            carousel,\n            fixHeight,\n            minHeight,\n            maxHeight } = attributes;\n\n        const hasImages = !! images.length;\n\n        const mediaPlaceholder = (\n                <MediaPlaceholder\n                    addToGallery={ hasImages }\n                    isAppender={ hasImages }\n                    className={ className }\n                    disableMediaButtons={ hasImages && ! isSelected }\n                    icon={ ! hasImages && icons.image }\n                    labels={ {\n                        title: ! hasImages && __( 'Slider Images' ),\n                        instructions: ! hasImages && 'Select files from your library.',\n                    } }\n                    onSelect={ this.onSelectImages }\n                    accept=\"image/*\"\n                    allowedTypes={ [ 'image' ] }\n                    multiple\n                    value={ images }\n                    onError={ this.onUploadError }\n                    notices={ hasImages ? undefined : noticeUI }\n                    onFocus={ this.props.onFocus }\n                />\n        );\n\n        if ( ! hasImages ) {\n\t\t\treturn mediaPlaceholder;\n        }\n\n        return (\n            <>\n                <InspectorControls>\n                <PanelBody title={__(\"Slider Settings\", \"carkeek-blocks\")}>\n                        <ToggleControl\n                            label=\"Auto Play Slider\"\n                            checked={ autoPlay }\n                            onChange={value =>\n                                setAttributes({ autoPlay: value })\n                            }\n                        />\n                        <RadioControl\n                            label=\"Transition\"\n                            selected={ transitionType }\n                            options={ [\n                                { label: 'Slide', value: 'slide' },\n                                { label: 'Fade', value: 'fade' },\n                            ] }\n                            onChange={ ( transitionType ) => { setAttributes( { transitionType } ) } }\n                        />\n                        {autoPlay &&\n                        <>\n                        <RangeControl\n                            label={__(\"Time on each slide in ms\", \"carkeek-blocks\")}\n                            value={autoPlaySpeed}\n                            onChange={value =>\n                                setAttributes({ autoPlaySpeed: value })\n                            }\n                            min={1000}\n                            max={10000}\n                        />\n\n                        </>\n                        }\n                        <RangeControl\n                            label={__(\"Transition speed\", \"carkeek-blocks\")}\n                            value={transitionSpeed}\n                            onChange={value =>\n                                setAttributes({ transitionSpeed: value })\n                            }\n                            min={1000}\n                            max={10000}\n                        />\n                        <ToggleControl\n                            label=\"Show Dot Navigation\"\n                            checked={ showDots }\n                            onChange={value =>\n                                setAttributes({ showDots: value })\n                            }\n                        />\n                        <ToggleControl\n                            label=\"Fix Height\"\n                            checked={ fixHeight }\n                            onChange={value =>\n                                setAttributes({ fixHeight: value })\n                            }\n                        />\n                        {fixHeight &&\n                        <>\n                        <RangeControl\n                            label={__(\"Minimum Height\", \"carkeek-blocks\")}\n                            value={minHeight}\n                            onChange={value =>\n                                setAttributes({ minHeight: value })\n                            }\n                            min={100}\n                            max={1000}\n                        />\n                        <RangeControl\n                            label={__(\"Max Height\", \"carkeek-blocks\")}\n                            value={maxHeight}\n                            onChange={value =>\n                                setAttributes({ maxHeight: value })\n                            }\n                            min={100}\n                            max={1000}\n                        />\n                        </>\n                        }\n                        {/* code is ready, but need to do more styling if carousel is desired - its set to false by default so option is not displayed */}\n                        {carousel &&\n                        <RadioControl\n                            label=\"Slider type\"\n                            selected={ sliderType }\n                            options={ [\n                                { label: 'Single Slides', value: 'single' },\n                                { label: 'Carousel', value: 'carousel' },\n                            ] }\n                            onChange={ ( sliderType ) => { setAttributes( { sliderType } ) } }\n                        />\n                        }\n                        {sliderType == 'carousel' &&\n                            <RangeControl\n                            label={__(\"Slides to Show\", \"carkeek-blocks\")}\n                            value={slidesToShow}\n                            onChange={ ( slidesToShow ) => { setAttributes( { slidesToShow } ) } }\n                            min={2}\n                            max={6}\n                        />\n                        }\n                        {sliderType == 'carousel' &&\n                            <RangeControl\n                            label={__(\"Slides to Scroll\", \"carkeek-blocks\")}\n                            value={slidesToScroll}\n                            onChange={ ( slidesToScroll ) => { setAttributes( { slidesToScroll } ) } }\n                            min={1}\n                            max={6}\n                        />\n                        }\n                    </PanelBody>\n\n                    <PanelBody title=\"Text Overlay settings\" initialOpen={false}>\n                        <PanelRow>\n                            Set a text overlay over all slides (to place different text over each slide use the Block Slider block).\n                            </PanelRow>\n                            <ToggleControl\n                            label=\"Show Text Overlay\"\n                            checked={ textOverlay }\n                            onChange={value =>\n                                setAttributes({ textOverlay: value })\n                            }\n                        />\n                        {textOverlay &&\n                        <>\n                            <PanelRow>\n                                <TextControl\n                                label=\"Header\"\n                                value={ headerText }\n                                onChange={ ( headerText ) => { setAttributes( { headerText } ) } }\n                            />\n                        </PanelRow>\n                        <PanelRow>\n                        <TextareaControl\n                                label=\"Content (Desktop)\"\n                                help=\"Enter some text\"\n                                value={ desktopText }\n                                onChange={ ( desktopText ) => { setAttributes( { desktopText } ) } }\n                            />\n                        </PanelRow>\n                        </>\n    }\n                    </PanelBody>\n\n                </InspectorControls>\n                {textOverlay &&\n                <div className=\"wp-block-carkeek-blocks-slider__slide-overlay\">\n                        <RichText\n                        tagName=\"h1\" // The tag here is the element output and editable in the admin\n                        className={ className }\n                        value={ headerText} // Any existing content, either from the database or an attribute default\n                        formattingControls={ [] } // Allow the content to be made bold or italic, but do not allow other formatting options\n                        onChange={ ( headerText ) => setAttributes( { headerText } ) } // Store updated content as a block attribute\n                        placeholder={ __( 'Heading...' ) } // Display this text before any content has been added by the user\n                    />\n                    <RichText\n                        tagName=\"p\" // The tag here is the element output and editable in the admin\n                        className={ className }\n                        value={ desktopText} // Any existing content, either from the database or an attribute default\n                        formattingControls={ [] } // Allow the content to be made bold or italic, but do not allow other formatting options\n                        onChange={ ( desktopText ) => setAttributes( { desktopText } ) } // Store updated content as a block attribute\n                        placeholder={ __( 'Text...' ) } // Display this text before any content has been added by the user\n                    />\n                    </div>\n                }\n                <Gallery\n\t\t\t\t\t{ ...this.props }\n\t\t\t\t\tselectedImage={ this.state.selectedImage }\n\t\t\t\t\tmediaPlaceholder={ mediaPlaceholder }\n\t\t\t\t\tonMoveBackward={ this.onMoveBackward }\n\t\t\t\t\tonMoveForward={ this.onMoveForward }\n\t\t\t\t\tonRemoveImage={ this.onRemoveImage }\n\t\t\t\t\tonSelectImage={ this.onSelectImage }\n\t\t\t\t\tonDeselectImage={ this.onDeselectImage }\n\t\t\t\t\tonSetImageAttributes={ this.setImageAttributes }\n\t\t\t\t\tonFocusGalleryCaption={ this.onFocusGalleryCaption }\n\t\t\t\t\tinsertBlocksAfter={ this.insertBlocksAfter }\n\t\t\t\t/>\n            </>\n        );\n    }\n\n}\nexport default compose([\n    withSelect((select, props) => {\n        const imgId = props.attributes.imgId;\n        return {\n            image: imgId ? select(\"core\").getMedia(imgId) : null,\n            imageSizes: select(\"core/editor\").getEditorSettings().imageSizes\n        };\n    }),\n    withNotices\n])(ImgSliderEdit);","/**\n * WordPress dependencies\n */\nimport { RichText } from '@wordpress/block-editor';\n\n\n\nexport default function save( { attributes } ) {\n\n\tconst {\n        autoPlay, autoPlaySpeed, transitionSpeed, showDots, slidesToShow, headerText, desktopText, sliderType, slidesToScroll, fixHeight, minHeight, maxHeight, transitionType,\n\t\timages,\n\t} = attributes;\n\tlet style;\n    if (fixHeight) {\n        style = {\n            minHeight: minHeight,\n            maxHeight: maxHeight\n        }\n    }\n\treturn (\n        <div>\n\t\t{ (headerText || desktopText) &&\n            <div className=\"wp-block-carkeek-blocks-slider__slide-overlay\">\n                <h1>{headerText}</h1> <p className=\"desktop-text\">{desktopText}</p>\n            </div>\n            }\n\t\t\t<div className={`wp-block-carkeek-blocks-slider__slide-wrapper fix-height-${fixHeight}`} style={style} data-minheight={minHeight} data-maxheight={maxHeight} data-showdots={showDots} data-autoplay={autoPlay} data-speed={autoPlaySpeed} data-type={sliderType} data-slides={slidesToShow} data-scroll={slidesToScroll} data-transition={transitionType} data-transitionspd={transitionSpeed}>\n\t\t\t\t{ images.map( ( image ) => {\n\t\t\t\t\t// The image should only have an aria-label if it's within a link and has no alt text.\n\t\t\t\t\tconst imageLabel =\n\t\t\t\t\t\timage.caption && image.link\n\t\t\t\t\t\t\t? image.caption\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\tconst imageStyle = {\n\t\t\t\t\t\tbackgroundImage: `url( ${image.fullUrl} )`\n\t\t\t\t\t};\n\t\t\t\t\tif (image.focalPointX) {\n\t\t\t\t\t\timageStyle.backgroundPosition = `${image.focalPointX *\n\t\t\t\t\t\t\t100}% ${image.focalPointY  * 100}%`;\n\t\t\t\t\t}\n\t\t\t\t\tconst img = (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={ imageStyle }\n\t\t\t\t\t\t\tdata-id={ image.id }\n\t\t\t\t\t\t\tdata-url={ image.url }\n\t\t\t\t\t\t\tdata-full-url={ image.fullUrl }\n\t\t\t\t\t\t\tdata-link={ image.link }\n\t\t\t\t\t\t\tdata-focalx = {image.focalPointX}\n\t\t\t\t\t\t\tdata-focaly = {image.focalPointY}\n\t\t\t\t\t\t\tclassName={ 'carkeek-slider-item__image'}\n\t\t\t\t\t\t\taria-label={ imageLabel || null }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={ image.id || image.url }\n\t\t\t\t\t\t\tclassName=\"carkeek-slider-item\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ ! RichText.isEmpty( image.caption ) && (\n\t\t\t\t\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"carkeek-slider-item__caption\"\n\t\t\t\t\t\t\t\t\t\tvalue={ image.caption }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t\t\t{ image.linksto ? <a className=\"carkeek-slider-item__link\" href={ image.linksto }>{ img }</a> : img }\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t</div>\n\t);\n}","import \"./style.editor.scss\";\n//import \"./img-slide\";\nimport edit from \"./img-slider-edit\";\nimport save from \"./img-slider-save\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, InspectorControls, RichText } from \"@wordpress/block-editor\";\nimport { Path, SVG, PanelRow, PanelBody, RangeControl, ToggleControl, TextareaControl, RadioControl, TextControl } from \"@wordpress/components\";\n/* we us the same resources as block slider just different output and some styles so keeping in same folder */\nconst attributes = {\n    images: {\n        type: 'array',\n        default: [],\n        source: \"query\",\n        selector: \".carkeek-slider-item\",\n        query: {\n            url: {\n                type: \"string\",\n                source: \"attribute\",\n                selector: \".carkeek-slider-item__image\",\n                attribute: \"data-url\"\n            },\n            fullUrl: {\n                type: \"string\",\n                source: \"attribute\",\n                selector: \".carkeek-slider-item__image\",\n                attribute: \"data-full-url\"\n            },\n            linksto: {\n                type: \"string\",\n                source: \"attribute\",\n                selector: \".carkeek-slider-item__link\",\n                attribute: \"href\"\n            },\n            id: {\n                type: \"string\",\n                source: \"attribute\",\n                selector: \".carkeek-slider-item__image\",\n                attribute: \"data-id\"\n            },\n            caption: {\n                type: \"string\",\n                source: \"html\",\n                selector: \".carkeek-slider-item__caption\"\n            },\n            focalPointX: {\n                type: \"string\",\n                source: \"attribute\",\n                selector: \".carkeek-slider-item__image\",\n                attribute: \"data-focalx\"\n            },\n            focalPointY: {\n                type: \"string\",\n                source: \"attribute\",\n                selector: \".carkeek-slider-item__image\",\n                attribute: \"data-focaly\"\n            }\n        }\n    },\n    ids: {\n        type: \"array\",\n        items: {\n            type: \"number\"\n        },\n        default: []\n    },\n    transitionType: {\n        type: 'string',\n        default: 'slide',\n    },\n    autoPlay: {\n        type: 'boolean',\n        default: false,\n    },\n    autoPlaySpeed: {\n        type: 'number',\n        default: 3000,\n    },\n    transitionSpeed: {\n        type: 'number',\n        default: 3000,\n    },\n    showDots: {\n        type: 'boolean',\n        default: false,\n    },\n    sliderType: {\n        type: 'string',\n        default: 'single'\n    },\n    slidesToShow: {\n        type: 'number',\n        default: 3\n    },\n    slidesToScroll: {\n        type: 'number',\n        default: 3\n    },\n    carousel: {\n        type: 'boolean',\n        default: false\n    },\n    fixHeight: {\n        type: 'boolean',\n        default: false\n    },\n    minHeight: {\n        type: 'number',\n        default: 300\n    },\n    maxHeight: {\n        type: 'number',\n        default: 600\n    },\n    textOverlay: {\n        type: 'boolean',\n        default: false\n    },\n    headerText: {\n        type: 'string',\n        source: 'html',\n        selector: 'h1'\n    },\n    desktopText: {\n        type: 'string',\n        source: 'text',\n        selector: '.desktop-text'\n    }\n}\n\nregisterBlockType(\"carkeek-blocks/image-slider\", {\n    title: __(\"Image Slider\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Make a slideshow of images\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: (<SVG\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\">\n            <Path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <Path d=\"M10 8v8l5-4-5-4zm9-5H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z\"/>\n        </SVG>),\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n    attributes,\n\n    keywords: [\n        __(\"slider\", \"carkeek-blocks\"),\n        __(\"slide\", \"carkeek-blocks\"),\n        __(\"gallery\", \"carkeek-blocks\")\n    ],\n\n    edit,\n\n    save\n});\n","import \"./style.editor.scss\";\nimport \"./img-slider.js\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, InspectorControls } from \"@wordpress/block-editor\";\nimport { Path, SVG, PanelBody, RangeControl, ToggleControl, RadioControl } from \"@wordpress/components\";\n\nconst attributes = {\n    autoPlay: {\n        type: 'boolean',\n        default: true\n    },\n    autoPlaySpeed: {\n        type: 'number',\n        default: 3000,\n    },\n    sliderType: {\n        type: 'string',\n        default: 'single'\n    },\n    slidesToShow: {\n        type: 'number',\n        default: 3\n    },\n    slidesToScroll: {\n        type: 'number',\n        default: 3\n    },\n    carousel: {\n        type: 'boolean',\n        default: false\n    }\n}\n\nregisterBlockType(\"carkeek-blocks/slider\", {\n    title: __(\"Block Slider\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Make a slideshow of inner blocks\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: (<SVG\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\">\n            <Path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <Path d=\"M10 8v8l5-4-5-4zm9-5H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z\"/>\n        </SVG>),\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n    attributes,\n\n    keywords: [\n        __(\"slider\", \"carkeek-blocks\"),\n        __(\"slide\", \"carkeek-blocks\"),\n        __(\"gallery\", \"carkeek-blocks\")\n    ],\n\n    edit({ attributes, className, setAttributes }) {\n        const { autoPlay, autoPlaySpeed, sliderType, slidesToScroll, slidesToShow, carousel } = attributes;\n        return (\n            <div className={`${className}`}>\n                <InspectorControls>\n                    <PanelBody>\n                        <ToggleControl\n                            label=\"Auto Play Slider\"\n                            checked={ autoPlay }\n                            onChange={value =>\n                                setAttributes({ autoPlay: value })\n                            }\n                        />\n                        {autoPlay &&\n                        <RangeControl\n                            label={__(\"Speed in ms\", \"carkeek-blocks\")}\n                            value={autoPlaySpeed}\n                            onChange={value =>\n                                setAttributes({ autoPlaySpeed: value })\n                            }\n                            min={1000}\n                            max={10000}\n                        />\n                        }\n                        {/* code is ready, but need to do more styling if carousel is desired - its set to false by default so option is not displayed */}\n                        {carousel &&\n                        <RadioControl\n                            label=\"Slider type\"\n                            selected={ sliderType }\n                            options={ [\n                                { label: 'Single Slides', value: 'single' },\n                                { label: 'Carousel', value: 'carousel' },\n                            ] }\n                            onChange={ ( sliderType ) => { setAttributes( { sliderType } ) } }\n                        />\n                        }\n                        {sliderType == 'carousel' &&\n                            <RangeControl\n                            label={__(\"Slides to Show\", \"carkeek-blocks\")}\n                            value={slidesToShow}\n                            onChange={ ( slidesToShow ) => { setAttributes( { slidesToShow } ) } }\n                            min={2}\n                            max={6}\n                        />\n                        }\n                        {sliderType == 'carousel' &&\n                            <RangeControl\n                            label={__(\"Slides to Scroll\", \"carkeek-blocks\")}\n                            value={slidesToScroll}\n                            onChange={ ( slidesToScroll ) => { setAttributes( { slidesToScroll } ) } }\n                            min={1}\n                            max={6}\n                        />\n                        }\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks\n                    allowedBlocks={[\"core/group\", \"core/media-text\", \"core/cover\"]}\n                />\n            </div>\n        );\n    },\n\n    save({ attributes } ) {\n        const{ autoPlay, autoPlaySpeed, slidesToShow, sliderType, slidesToScroll } = attributes;\n        return (\n            <div>\n                <div className=\"wp-block-carkeek-blocks-slider__slide-wrapper\" data-autoplay={autoPlay} data-speed={autoPlaySpeed} data-type={sliderType} data-slides={slidesToShow} data-scroll={slidesToScroll}>\n                <InnerBlocks.Content />\n                </div>\n            </div>\n        );\n    }\n});","/**\n * External dependencies\n */\nimport { get, pick } from 'lodash';\n\nexport function defaultColumnsNumber( attributes ) {\n\treturn Math.min( 3, attributes.images.length );\n}\n\nexport const pickRelevantMediaFiles = ( image, sizeSlug = 'large' ) => {\n\tconst imageProps = pick( image, [ 'alt', 'id', 'caption' ] );\n\timageProps.url =\n\t\tget( image, [ 'sizes', sizeSlug, 'url' ] ) ||\n\t\tget( image, [ 'media_details', 'sizes', sizeSlug, 'source_url' ] ) ||\n\t\timage.url;\n\tconst fullUrl =\n\t\tget( image, [ 'sizes', 'full', 'url' ] ) ||\n\t\tget( image, [ 'media_details', 'sizes', 'full', 'source_url' ] );\n\tif ( fullUrl ) {\n\t\timageProps.fullUrl = fullUrl;\n\t}\n\treturn imageProps;\n};","// extracted by mini-css-extract-plugin","import { Component } from \"@wordpress/element\";\nimport {\n    RichText,\n    MediaPlaceholder,\n    BlockControls,\n    MediaUpload,\n    MediaUploadCheck,\n    InspectorControls\n} from \"@wordpress/block-editor\";\nimport { __ } from \"@wordpress/i18n\";\nimport { isBlobURL } from \"@wordpress/blob\";\nimport {\n    Spinner,\n    withNotices,\n    Toolbar,\n    IconButton,\n    PanelBody,\n    TextareaControl,\n    SelectControl,\n    TextControl\n} from \"@wordpress/components\";\nimport { withSelect } from \"@wordpress/data\";\n\nclass TeamMemberEdit extends Component {\n    state = {\n        selectedLink: null\n    };\n\n    componentDidMount() {\n        const { attributes, setAttributes } = this.props;\n        const { url, id } = attributes;\n        if (url && isBlobURL(url) && !id) {\n            setAttributes({\n                url: \"\",\n                alt: \"\"\n            });\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isSelected && !this.props.isSelected) {\n            this.setState({\n                selectedLink: null\n            });\n        }\n    }\n    onChangeTitle = title => {\n        this.props.setAttributes({ title });\n    };\n    onChangeName = name => {\n        this.props.setAttributes({ name });\n    };\n    onChangeDetails = details => {\n        this.props.setAttributes({ details });\n    };\n    onChangeEmail = email => {\n        this.props.setAttributes({ email });\n    };\n    onChangeEmailLabel = emailLabel => {\n        this.props.setAttributes({ emailLabel });\n    };\n    onSelectImage = ({ id, url, alt }) => {\n        this.props.setAttributes({\n            id,\n            url,\n            alt\n        });\n    };\n    onSelectURL = url => {\n        this.props.setAttributes({\n            url,\n            id: null,\n            alt: \"\"\n        });\n    };\n    onUploadError = message => {\n        const { noticeOperations } = this.props;\n        noticeOperations.createErrorNotice(message);\n    };\n    removeImage = () => {\n        this.props.setAttributes({\n            id: null,\n            url: \"\",\n            alt: \"\"\n        });\n    };\n    updateAlt = alt => {\n        this.props.setAttributes({\n            alt\n        });\n    };\n    onImageSizeChange = url => {\n        this.props.setAttributes({\n            url\n        });\n    };\n    getImageSizes() {\n        const { image, imageSizes } = this.props;\n        if (!image) return [];\n        let options = [];\n        const sizes = image.media_details.sizes;\n        for (const key in sizes) {\n            const size = sizes[key];\n            const imageSize = imageSizes.find(size => size.slug === key);\n            if (imageSize) {\n                options.push({\n                    label: imageSize.name,\n                    value: size.source_url\n                });\n            }\n        }\n        return options;\n    }\n\n\n    render() {\n        //console.log(this.props);\n        const { className, attributes, noticeUI, isSelected, layout } = this.props;\n        const { title, name, url, alt, id, details, email, emailLabel } = attributes;\n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody title={__(\"Image Settings\", \"carkeek-blocks\")}>\n                        {url && !isBlobURL(url) && (\n                            <TextareaControl\n                                label={__(\n                                    \"Alt Text (Alternative Text)\",\n                                    \"carkeek-blocks\"\n                                )}\n                                value={alt}\n                                onChange={this.updateAlt}\n                                help={__(\n                                    \"Alternative text describes your image to people can't see it. Add a short description with its key details.\"\n                                )}\n                            />\n                        )}\n                        {id && (\n                            <SelectControl\n                                label={__(\"Image Size\", \"carkeek-blocks\")}\n                                options={this.getImageSizes()}\n                                onChange={this.onImageSizeChange}\n                                value={url}\n                            />\n                        )}\n                    </PanelBody>\n                </InspectorControls>\n                <BlockControls>\n                    {url && (\n                        <Toolbar>\n                            {id && (\n                                <MediaUploadCheck>\n                                    <MediaUpload\n                                        onSelect={this.onSelectImage}\n                                        allowedTypes={[\"image\"]}\n                                        value={id}\n                                        render={({ open }) => {\n                                            return (\n                                                <IconButton\n                                                    className=\"components-icon-button components-toolbar__control\"\n                                                    label={__(\n                                                        \"Edit Image\",\n                                                        \"carkeek-blocks\"\n                                                    )}\n                                                    onClick={open}\n                                                    icon=\"edit\"\n                                                />\n                                            );\n                                        }}\n                                    />\n                                </MediaUploadCheck>\n                            )}\n                            <IconButton\n                                className=\"components-icon-button components-toolbar__control\"\n                                label={__(\"Remove Image\", \"carkeek-blocks\")}\n                                onClick={this.removeImage}\n                                icon=\"trash\"\n                            />\n                        </Toolbar>\n                    )}\n                </BlockControls>\n                <div className={className}>\n                    { (layout==\"grid\" || isSelected) &&\n                    <>\n                        {url ? (\n                            <>\n                                <img src={url} alt={alt} />\n                                {isBlobURL(url) && <Spinner />}\n                            </>\n                        ) : (\n                            <MediaPlaceholder\n                                icon=\"format-image\"\n                                onSelect={this.onSelectImage}\n\n                                onError={this.onUploadError}\n                                //accept=\"image/*\"\n                                allowedTypes={[\"image\"]}\n                                notices={noticeUI}\n                            />\n                        )}\n                        </>\n                    }\n                    <RichText\n                        className={\"wp-block-carkeek-blocks-team-member__name\"}\n                        tagName=\"div\"\n                        onChange={this.onChangeName}\n                        value={name}\n                        placeholder={__(\"Member Name\", \"carkeek-blocks\")}\n                        formatingControls={[]}\n                    />\n\n                    <RichText\n                        className={\"wp-block-carkeek-blocks-team-member__title\"}\n                        tagName=\"div\"\n                        onChange={this.onChangeTitle}\n                        value={title}\n                        placeholder={isSelected ? __(\"Member Title\", \"carkeek-blocks\") : null}\n                        formatingControls={[]}\n                    />\n\n                    {isSelected &&\n                    <>\n                    <RichText\n                        className={\"wp-block-carkeek-blocks-team-member__details\"}\n                        tagName=\"p\"\n                        onChange={this.onChangeDetails}\n                        value={details}\n                        placeholder={__(\"Member Details\", \"carkeek-blocks\")}\n                        formatingControls={[]}\n                    />\n                    <TextControl\n                        value={email}\n                        onChange={this.onChangeEmail}\n                        label={__(\"Email\", \"carkeek-blocks\")}\n                    />\n                    <TextControl\n                        value={emailLabel}\n                        onChange={this.onChangeEmailLabel}\n                        label={__(\"Email Label\", \"carkeek-blocks\")}\n                    />\n                    </>\n                    }\n                </div>\n            </>\n        );\n    }\n}\n\nexport default withSelect((select, props) => {\n    const id = props.attributes.id;\n    const parentId = select( 'core/block-editor' ).getBlockHierarchyRootClientId( props.clientId );\n    const parentAttributes = select('core/block-editor').getBlockAttributes( parentId );\n    return {\n        image: id ? select(\"core\").getMedia(id) : null,\n        imageSizes: select(\"core/editor\").getEditorSettings().imageSizes,\n        layout: parentAttributes.layout\n    };\n})(withNotices(TeamMemberEdit));\n","import \"./style.editor.scss\";\nimport \"./parent\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport edit from \"./edit\";\nimport { RichText } from \"@wordpress/editor\";\n\n\nconst attributes = {\n    name: {\n        type: \"string\",\n        source: \"html\",\n        selector: \".wp-block-carkeek-blocks-team-member__name\"\n    },\n    title: {\n        type: \"string\",\n        source: \"html\",\n        selector: \".wp-block-carkeek-blocks-team-member__title\"\n    },\n    details: {\n        type: \"string\",\n        source: \"html\",\n        selector: \".wp-block-carkeek-blocks-team-member__details\"\n    },\n    id: {\n        type: \"number\"\n    },\n    alt: {\n        type: \"string\",\n        source: \"attribute\",\n        selector: \"img\",\n        attribute: \"alt\",\n        default: \"\"\n    },\n    url: {\n        type: \"string\",\n        source: \"attribute\",\n        selector: \"img\",\n        attribute: \"src\"\n    },\n    email: {\n        type: \"string\",\n    },\n    emailLabel: {\n        type: \"string\",\n        default: \"Send an email\"\n    }\n};\n\nregisterBlockType(\"carkeek-blocks/team-member\", {\n    title: __(\"Team Member\", \"carkeek-blocks\"),\n\n    description: __(\" Block showing a Team Member. \", \"carkeek-blocks\"),\n\n    icon: \"admin-users\",\n\n    parent: [\"carkeek-blocks/team-members\"],\n\n    supports: {\n        reusable: false,\n        html: false\n    },\n\n    category: \"widgets\",\n\n    keywords: [\n        __(\"team\", \"carkeek-blocks\"),\n        __(\"member\", \"carkeek-blocks\"),\n        __(\"person\", \"carkeek-blocks\"),\n        __(\"staff\", \"carkeek-blocks\")\n    ],\n\n    attributes,\n\n    deprecated: [{\n        attributes,\n        save: ({ attributes }) => {\n            const { title, name, url, alt, id, details, email, emailLabel } = attributes;\n            return (\n                <div>\n                    <div className=\"wp-block-carkeek-blocks-team-member__initial\">\n                        {url && (\n                            <div className=\"wp-block-carkeek-blocks-team-member__image\">\n                                <img\n                                    src={url}\n                                    alt={alt}\n                                    className={id ? `wp-image-${id}` : null}\n                                />\n                            </div>\n                        )}\n                        {name && (\n                            <RichText.Content\n                                className={\"wp-block-carkeek-blocks-team-member__name\"}\n                                tagName=\"div\"\n                                value={name}\n                            />\n                        )}\n                        {title && (\n                            <RichText.Content\n                                className={\"wp-block-carkeek-blocks-team-member__title\"}\n                                tagName=\"p\"\n                                value={title}\n                            />\n                        )}\n                     </div>\n                     <div className=\"wp-block-carkeek-blocks-team-member__additional\">\n                        {details && (\n                            <RichText.Content\n                                className={\"wp-block-carkeek-blocks-team-member__details\"}\n                                tagName=\"p\"\n                                value={details}\n                            />\n                        )}\n                        {email &&(\n                            <a className=\"{button is-style-cta}\" href=\"mailto:{email}\">{emailLabel}</a>\n                        )}\n                    </div>\n                </div>\n            );\n        },\n    }],\n\n    save: ({ attributes }) => {\n        const { title, name, url, alt, id, details, email, emailLabel } = attributes;\n        return (\n            <div>\n                <div className=\"wp-block-carkeek-blocks-team-member__initial\">\n                    {url && (\n                        <div className=\"wp-block-carkeek-blocks-team-member__image\">\n                            <img\n                                src={url}\n                                alt={alt}\n                                className={id ? `skip-lazy wp-image-${id}` : 'skip-lazy'}\n                            />\n                        </div>\n                    )}\n\n                    <RichText.Content\n                        className={\"wp-block-carkeek-blocks-team-member__name\"}\n                        tagName=\"div\"\n                        value={name}\n                    />\n\n                    {title && (\n                        <RichText.Content\n                            className={\"wp-block-carkeek-blocks-team-member__title\"}\n                            tagName=\"p\"\n                            value={title}\n                        />\n                    )}\n                 </div>\n                 <div className=\"wp-block-carkeek-blocks-team-member__additional\">\n                    {details && (\n                        <RichText.Content\n                            className={\"wp-block-carkeek-blocks-team-member__details\"}\n                            tagName=\"p\"\n                            value={details}\n                        />\n                    )}\n                    {email &&(\n                        <a className={\"button is-style-cta\"} href={`mailto:${email}`}>{emailLabel}</a>\n                    )}\n                </div>\n            </div>\n        );\n    },\n\n    edit\n});\n","import { Path, SVG } from '@wordpress/components';\nimport { registerBlockType, createBlock } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody, RangeControl, RadioControl } from \"@wordpress/components\";\n\nconst attributes = {\n    columns: {\n        type: \"number\",\n        default: 3\n    },\n    layout: {\n        type: \"string\",\n        default: \"grid\"\n    }\n};\n\nregisterBlockType(\"carkeek-blocks/team-members\", {\n    title: __(\"Team Members\", \"carkeek-blocks\"),\n\n    description: __(\"Block showing a Team Members.\", \"carkeek-blocks\"),\n\n    icon: (\n        <SVG xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"black\"\n            width=\"48px\"\n            height=\"48px\">\n                <Path\n                d=\"M0 0h24v24H0V0z\"\n                fill=\"none\"/>\n                <Path\n                d=\"M12 12c1.65 0 3-1.35 3-3s-1.35-3-3-3-3 1.35-3 3 1.35 3 3 3zm0-4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm6 8.58c0-2.5-3.97-3.58-6-3.58s-6 1.08-6 3.58V18h12v-1.42zM8.48 16c.74-.51 2.23-1 3.52-1s2.78.49 3.52 1H8.48zM19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z\"\n                />\n        </SVG>\n    ),\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n\n    transforms: {\n        from: [\n            {\n                type: \"block\",\n                blocks: [\"core/gallery\"],\n                transform: ({ columns, images }) => {\n                    let inner = images.map(({ alt, id, url }) =>\n                        createBlock(\"carkeek-blocks/team-member\", {\n                            alt,\n                            id,\n                            url\n                        })\n                    );\n                    return createBlock(\n                        \"carkeek-blocks/team-members\",\n                        {\n                            columns: columns\n                        },\n                        inner\n                    );\n                }\n            },\n            {\n                type: \"block\",\n                blocks: [\"core/image\"],\n                isMultiBlock: true,\n                transform: attributes => {\n                    let inner = attributes.map(({ alt, id, url }) =>\n                        createBlock(\"carkeek-blocks/team-member\", {\n                            alt,\n                            id,\n                            url\n                        })\n                    );\n                    return createBlock(\n                        \"carkeek-blocks/team-members\",\n                        {\n                            columns: 3\n                        },\n                        inner\n                    );\n                }\n            }\n        ]\n    },\n\n    keywords: [\n        __(\"team\", \"carkeek-blocks\"),\n        __(\"member\", \"carkeek-blocks\"),\n        __(\"person\", \"carkeek-blocks\")\n    ],\n\n    attributes,\n\n    edit({ className, attributes, setAttributes }) {\n        const { columns, layout } = attributes;\n        return (\n            <div className={`${className} has-${columns}-columns is-${layout}-style`}>\n                <InspectorControls>\n                    <PanelBody>\n                        <RangeControl\n                            label={__(\"Columns\", \"carkeek-blocks\")}\n                            help={__(\"With list style layout, this determines the width of the column.\", \"carkeek-blocks\")}\n                            value={columns}\n                            onChange={columns => setAttributes({ columns })}\n                            min={1}\n                            max={6}\n                        />\n                        <RadioControl\n                        label=\"Layout\"\n                        selected={layout}\n                        options={[\n                                {label: \"Grid\", value:'grid'},\n                                {label: \"List\", value:'list'},\n                            ]}\n                        onChange={layout => setAttributes({ layout })}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks\n                    orientation = {layout == 'grid' ? 'horizontal' : 'vertical'}\n                    allowedBlocks={[\"carkeek-blocks/team-member\"]}\n                />\n            </div>\n        );\n    },\n\n    save({ attributes }) {\n        const { columns, layout } = attributes;\n        return (\n            <div className={`has-${columns}-columns is-${layout}-style`} data-layout={layout}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    }\n});\n","// extracted by mini-css-extract-plugin","import \"./blocks/team-member\";\nimport \"./blocks/link-tile\";\nimport \"./blocks/custom-archive\";\nimport \"./blocks/link-gallery\";\nimport \"./blocks/slider-gallery\";\nimport \"./blocks/accordion\";\nimport \"./blocks/form-assembly\";\nimport \"./blocks/rollover-images\";\nimport \"./blocks/page-title\";\n\n","module.exports = wp[\"blob\"];","module.exports = wp[\"blockEditor\"];","module.exports = wp[\"blocks\"];","module.exports = wp[\"components\"];","module.exports = wp[\"compose\"];","module.exports = wp[\"data\"];","module.exports = wp[\"editor\"];","module.exports = wp[\"element\"];","module.exports = wp[\"i18n\"];","module.exports = wp[\"icons\"];","module.exports = wp[\"keycodes\"];","module.exports = lodash;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,UAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AACA;AAAA;AAAA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA5BA;AACA;AA6BA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;AC5CA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;A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;;;;;;;;;;ACAA;;;AAGA;AACA;AAEA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAbA;AAiBA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAGA;AACA;AACA;AADA;AAKA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAEA;AACA;AADA;AAGA;;;AAEA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AADA;AAKA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAnBA;AAsiBA;;;;AArRA;AACA;AAuRA;AACA;AAAA;AACA;AADA;AAIA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAGA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzUA;;;AAGA;AAEA;;;;AAGA;AACA;AACA;AACA;AAEA;;;;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAKA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AAMA;AAGA;;;;;;;;;;;;;;AC9FA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;;;AAGA;AAcA;AACA;AACA;AACA;AAkBA;AACA;AACA;AACA;AAOA;AACA;AAGA;AACA;AAGA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAnBA;AAuBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AADA;AAQA;AACA;AAAA;AAEA;AAKA;AACA;AACA;AACA;AAVA;AAAA;AADA;AAcA;;;AAEA;AAAA;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAGA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AADA;AAUA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AADA;AA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","sourceRoot":""}